{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport COLORS from \"../colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Schedule = function Schedule(_ref) {\n  var tasks = _ref.tasks;\n  var groupedByHour = tasks.reduce(function (acc, task) {\n    var hour = new Date(task.startTime).getHours();\n    if (!acc[hour]) acc[hour] = [];\n    acc[hour].push(task);\n    return acc;\n  }, {});\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Your Daily Schedule\"\n    }), _jsxs(ScrollView, {\n      style: styles.timeline,\n      children: [Object.keys(groupedByHour).sort().map(function (hour) {\n        return _jsxs(View, {\n          style: styles.timeBlock,\n          children: [_jsxs(Text, {\n            style: styles.timeLabel,\n            children: [hour, \":00\"]\n          }), _jsx(View, {\n            style: styles.taskContainer,\n            children: groupedByHour[hour].map(function (task, index) {\n              return _jsxs(View, {\n                style: styles.task,\n                children: [_jsx(Text, {\n                  style: styles.taskTitle,\n                  children: task.title\n                }), _jsxs(Text, {\n                  style: styles.taskDuration,\n                  children: [task.duration, \" min\"]\n                }), task.image && _jsx(Image, {\n                  source: {\n                    uri: task.image\n                  },\n                  style: styles.taskImage\n                }), task.tags && task.tags.length > 0 && _jsx(View, {\n                  style: styles.tagsContainer,\n                  children: task.tags.map(function (tag, tagIndex) {\n                    return _jsx(View, {\n                      style: [styles.tagBadge, {\n                        backgroundColor: getTagColor(tag)\n                      }],\n                      children: _jsx(Text, {\n                        style: styles.tagText,\n                        children: tag\n                      })\n                    }, tagIndex);\n                  })\n                }), task.productivityLevel && _jsx(View, {\n                  style: [styles.productivityIndicator, {\n                    backgroundColor: getProductivityColor(task.productivityLevel)\n                  }],\n                  children: _jsx(Text, {\n                    style: styles.productivityText,\n                    children: task.productivityLevel\n                  })\n                })]\n              }, index);\n            })\n          })]\n        }, hour);\n      }), tasks.length === 0 && _jsx(Text, {\n        style: styles.emptyState,\n        children: \"Your schedule is empty. Add some tasks to start planning your day!\"\n      })]\n    })]\n  });\n};\nvar getTagColor = function getTagColor(tag) {\n  switch (tag.toLowerCase()) {\n    case 'work':\n      return COLORS.primary;\n    case 'leisure':\n      return COLORS.success;\n    case 'grind':\n      return COLORS.secondaryDark;\n    default:\n      return COLORS.secondary;\n  }\n};\nvar getProductivityColor = function getProductivityColor(level) {\n  switch (level) {\n    case 'high':\n      return COLORS.success;\n    case 'medium':\n      return COLORS.warning;\n    case 'low':\n      return COLORS.danger;\n    default:\n      return COLORS.secondaryDark;\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: COLORS.black\n  },\n  timeline: {\n    flex: 1\n  },\n  timeBlock: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  timeLabel: {\n    width: 50,\n    fontSize: 16,\n    color: COLORS.secondaryDark,\n    paddingTop: 5\n  },\n  taskContainer: {\n    flex: 1\n  },\n  task: {\n    backgroundColor: COLORS.cardBackground,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 8,\n    shadowColor: COLORS.black,\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    elevation: 2,\n    borderLeftWidth: 4,\n    borderLeftColor: COLORS.primary\n  },\n  taskTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 5,\n    color: COLORS.black\n  },\n  taskDuration: {\n    fontSize: 14,\n    color: COLORS.secondaryDark,\n    marginBottom: 5\n  },\n  taskImage: {\n    width: '100%',\n    height: 120,\n    borderRadius: 6,\n    marginVertical: 5\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 5\n  },\n  tagBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    marginRight: 8,\n    marginBottom: 5\n  },\n  tagText: {\n    color: COLORS.white,\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  productivityIndicator: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    marginTop: 5\n  },\n  productivityText: {\n    color: COLORS.white,\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  emptyState: {\n    fontSize: 16,\n    color: COLORS.secondaryDark,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 40,\n    backgroundColor: COLORS.secondaryLight,\n    padding: 20,\n    borderRadius: 8\n  }\n});\nexport default Schedule;","map":{"version":3,"names":["React","View","Text","StyleSheet","Image","ScrollView","COLORS","jsx","_jsx","jsxs","_jsxs","Schedule","_ref","tasks","groupedByHour","reduce","acc","task","hour","Date","startTime","getHours","push","style","styles","container","children","title","timeline","Object","keys","sort","map","timeBlock","timeLabel","taskContainer","index","taskTitle","taskDuration","duration","image","source","uri","taskImage","tags","length","tagsContainer","tag","tagIndex","tagBadge","backgroundColor","getTagColor","tagText","productivityLevel","productivityIndicator","getProductivityColor","productivityText","emptyState","toLowerCase","primary","success","secondaryDark","secondary","level","warning","danger","create","flex","marginBottom","fontSize","fontWeight","color","black","flexDirection","width","paddingTop","cardBackground","borderRadius","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderLeftWidth","borderLeftColor","marginVertical","flexWrap","marginTop","paddingHorizontal","paddingVertical","marginRight","white","alignSelf","fontStyle","textAlign","secondaryLight"],"sources":["C:/Users/Seho/Desktop/Seho/Personal Projects/Claude/scheduler_app/src/components/Schedule.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Image, ScrollView } from 'react-native';\nimport COLORS from '../colors';\n\nconst Schedule = ({ tasks }) => {\n  // Group tasks by hour for timeline view\n  const groupedByHour = tasks.reduce((acc, task) => {\n    const hour = new Date(task.startTime).getHours();\n    if (!acc[hour]) acc[hour] = [];\n    acc[hour].push(task);\n    return acc;\n  }, {});\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Your Daily Schedule</Text>\n      \n      <ScrollView style={styles.timeline}>\n        {Object.keys(groupedByHour).sort().map(hour => (\n          <View key={hour} style={styles.timeBlock}>\n            <Text style={styles.timeLabel}>{hour}:00</Text>\n            <View style={styles.taskContainer}>\n              {groupedByHour[hour].map((task, index) => (\n                <View key={index} style={styles.task}>\n                  <Text style={styles.taskTitle}>{task.title}</Text>\n                  <Text style={styles.taskDuration}>{task.duration} min</Text>\n                  {task.image && (\n                    <Image \n                      source={{ uri: task.image }} \n                      style={styles.taskImage} \n                    />\n                  )}\n                  {task.tags && task.tags.length > 0 && (\n                    <View style={styles.tagsContainer}>\n                      {task.tags.map((tag, tagIndex) => (\n                        <View \n                          key={tagIndex} \n                          style={[styles.tagBadge, { backgroundColor: getTagColor(tag) }]}\n                        >\n                          <Text style={styles.tagText}>{tag}</Text>\n                        </View>\n                      ))}\n                    </View>\n                  )}\n                  {task.productivityLevel && (\n                    <View style={[styles.productivityIndicator, \n                      { backgroundColor: getProductivityColor(task.productivityLevel) }]}>\n                      <Text style={styles.productivityText}>\n                        {task.productivityLevel}\n                      </Text>\n                    </View>\n                  )}\n                </View>\n              ))}\n            </View>\n          </View>\n        ))}\n        \n        {/* Empty state */}\n        {tasks.length === 0 && (\n          <Text style={styles.emptyState}>\n            Your schedule is empty. Add some tasks to start planning your day!\n          </Text>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\n// Helper function to get color based on tag\nconst getTagColor = (tag) => {\n  switch (tag.toLowerCase()) {\n    case 'work': return COLORS.primary;\n    case 'leisure': return COLORS.success;\n    case 'grind': return COLORS.secondaryDark;\n    default: return COLORS.secondary;\n  }\n};\n\n// Helper function to get color based on productivity level\nconst getProductivityColor = (level) => {\n  switch (level) {\n    case 'high': return COLORS.success;\n    case 'medium': return COLORS.warning;\n    case 'low': return COLORS.danger;\n    default: return COLORS.secondaryDark;\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: COLORS.black,\n  },\n  timeline: {\n    flex: 1,\n  },\n  timeBlock: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  timeLabel: {\n    width: 50,\n    fontSize: 16,\n    color: COLORS.secondaryDark,\n    paddingTop: 5,\n  },\n  taskContainer: {\n    flex: 1,\n  },\n  task: {\n    backgroundColor: COLORS.cardBackground,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 8,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    elevation: 2,\n    borderLeftWidth: 4,\n    borderLeftColor: COLORS.primary,\n  },\n  taskTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 5,\n    color: COLORS.black,\n  },\n  taskDuration: {\n    fontSize: 14,\n    color: COLORS.secondaryDark,\n    marginBottom: 5,\n  },\n  taskImage: {\n    width: '100%',\n    height: 120,\n    borderRadius: 6,\n    marginVertical: 5,\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 5,\n  },\n  tagBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    marginRight: 8,\n    marginBottom: 5,\n  },\n  tagText: {\n    color: COLORS.white,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  productivityIndicator: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    marginTop: 5,\n  },\n  productivityText: {\n    color: COLORS.white,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  emptyState: {\n    fontSize: 16,\n    color: COLORS.secondaryDark,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 40,\n    backgroundColor: COLORS.secondaryLight,\n    padding: 20,\n    borderRadius: 8,\n  },\n});\n\nexport default Schedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}