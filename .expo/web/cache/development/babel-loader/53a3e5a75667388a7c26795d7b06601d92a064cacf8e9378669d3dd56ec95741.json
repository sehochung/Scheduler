{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport \"./src/styles/index.css\";\nimport COLORS from \"./src/colors\";\nimport Schedule from \"./src/components/Schedule\";\nimport TaskInput from \"./src/components/TaskInput\";\nimport SuggestionPanel from \"./src/components/SuggestionPanel\";\nimport MoodTracker from \"./src/components/MoodTracker\";\nimport ScheduleSharing from \"./src/components/ScheduleSharing\";\nimport DailyAnalysis from \"./src/components/DailyAnalysis\";\nimport DailySchedule from \"./src/components/DailySchedule\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  console.log('App component rendering');\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dailyMood = _useState4[0],\n    setDailyMood = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    analysis = _useState6[0],\n    setAnalysis = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showBasicView = _useState8[0],\n    setShowBasicView = _useState8[1];\n  var addTask = function addTask(newTask) {\n    setTasks([].concat(_toConsumableArray(tasks), [newTask]));\n  };\n  var analyzeDailyPerformance = function analyzeDailyPerformance() {\n    var workCount = 0;\n    var leisureCount = 0;\n    var grindCount = 0;\n    tasks.forEach(function (task) {\n      if (task.tags && task.tags.includes('work')) workCount++;\n      if (task.tags && task.tags.includes('leisure')) leisureCount++;\n      if (task.tags && task.tags.includes('grind')) grindCount++;\n    });\n    var scheduleCategory = 'balanced';\n    if (workCount > leisureCount && workCount > grindCount) {\n      scheduleCategory = 'work-focused';\n    } else if (leisureCount > workCount && leisureCount > grindCount) {\n      scheduleCategory = 'leisure-focused';\n    } else if (grindCount > workCount && grindCount > leisureCount) {\n      scheduleCategory = 'grind-focused';\n    }\n    setAnalysis({\n      productivityScore: 85,\n      moodTrends: 'Positive after exercise tasks',\n      suggestions: ['Schedule more morning exercise', 'Take breaks between long tasks'],\n      scheduleCategory: scheduleCategory\n    });\n  };\n  if (showBasicView) {\n    return _jsx(SafeAreaView, {\n      style: {\n        flex: 1,\n        backgroundColor: '#f0f0f0'\n      },\n      children: _jsxs(View, {\n        style: {\n          padding: 20,\n          alignItems: 'center',\n          justifyContent: 'center',\n          flex: 1\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 24,\n            fontWeight: 'bold',\n            marginBottom: 20\n          },\n          children: \"Basic Test View\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 16,\n            marginBottom: 10\n          },\n          children: \"If you can see this, the app is rendering correctly\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setShowBasicView(false);\n          },\n          style: {\n            backgroundColor: 'blue',\n            padding: 10,\n            borderRadius: 5,\n            marginTop: 20\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Show Full App\"\n          })\n        })]\n      })\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\"\n    }), _jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.scrollContent,\n      children: [_jsx(Text, {\n        style: styles.appTitle,\n        children: \"Schedule Bot\"\n      }), _jsx(Schedule, {\n        tasks: tasks\n      }), _jsx(TaskInput, {\n        onAddTask: addTask\n      }), _jsx(SuggestionPanel, {\n        tasks: tasks\n      }), _jsx(MoodTracker, {\n        onMoodUpdate: setDailyMood,\n        tasks: tasks\n      }), _jsx(DailyAnalysis, {\n        analysis: analysis,\n        onAnalyze: analyzeDailyPerformance\n      }), _jsx(ScheduleSharing, {\n        schedule: tasks\n      }), _jsx(View, {\n        style: styles.footer,\n        children: _jsx(Text, {\n          style: styles.footerText,\n          children: \"Schedule better, live smarter\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.background\n  },\n  scrollView: {\n    flex: 1\n  },\n  scrollContent: {\n    padding: 16,\n    paddingTop: 40,\n    paddingBottom: 40\n  },\n  appTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: COLORS.primary,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  footer: {\n    marginTop: 30,\n    alignItems: 'center'\n  },\n  footerText: {\n    fontSize: 14,\n    color: COLORS.secondaryDark,\n    fontStyle: 'italic'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","SafeAreaView","StatusBar","ScrollView","TouchableOpacity","COLORS","Schedule","TaskInput","SuggestionPanel","MoodTracker","ScheduleSharing","DailyAnalysis","DailySchedule","jsx","_jsx","jsxs","_jsxs","App","console","log","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","dailyMood","setDailyMood","_useState5","_useState6","analysis","setAnalysis","_useState7","_useState8","showBasicView","setShowBasicView","addTask","newTask","concat","_toConsumableArray","analyzeDailyPerformance","workCount","leisureCount","grindCount","forEach","task","tags","includes","scheduleCategory","productivityScore","moodTrends","suggestions","style","flex","backgroundColor","children","padding","alignItems","justifyContent","fontSize","fontWeight","marginBottom","onPress","borderRadius","marginTop","color","styles","container","barStyle","scrollView","contentContainerStyle","scrollContent","appTitle","onAddTask","onMoodUpdate","onAnalyze","schedule","footer","footerText","create","background","paddingTop","paddingBottom","primary","textAlign","secondaryDark","fontStyle"],"sources":["C:/Users/Seho/Desktop/Seho/Personal Projects/Claude/scheduler_app/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  StatusBar,\n  ScrollView,\n  TouchableOpacity\n} from 'react-native';\n\n// Import main CSS file\nimport './src/styles/index.css';\n\n// Import color theme\nimport COLORS from './src/colors';\n\n// Import components from their respective folders\nimport Schedule from './src/components/Schedule';\nimport TaskInput from './src/components/TaskInput';\nimport SuggestionPanel from './src/components/SuggestionPanel';\nimport MoodTracker from './src/components/MoodTracker';\nimport ScheduleSharing from './src/components/ScheduleSharing';\nimport DailyAnalysis from './src/components/DailyAnalysis';\nimport DailySchedule from './src/components/DailySchedule';\n\nexport default function App() {\n  console.log('App component rendering');\n  const [tasks, setTasks] = useState([]);\n  const [dailyMood, setDailyMood] = useState({});\n  const [analysis, setAnalysis] = useState(null);\n  const [showBasicView, setShowBasicView] = useState(false); // Show full app view\n\n  const addTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const analyzeDailyPerformance = () => {\n    // Generate insights based on completed tasks and mood data\n\n    // Determine schedule category based on tasks\n    let workCount = 0;\n    let leisureCount = 0;\n    let grindCount = 0;\n\n    tasks.forEach(task => {\n      if (task.tags && task.tags.includes('work')) workCount++;\n      if (task.tags && task.tags.includes('leisure')) leisureCount++;\n      if (task.tags && task.tags.includes('grind')) grindCount++;\n    });\n\n    // Determine primary schedule category\n    let scheduleCategory = 'balanced';\n    if (workCount > leisureCount && workCount > grindCount) {\n      scheduleCategory = 'work-focused';\n    } else if (leisureCount > workCount && leisureCount > grindCount) {\n      scheduleCategory = 'leisure-focused';\n    } else if (grindCount > workCount && grindCount > leisureCount) {\n      scheduleCategory = 'grind-focused';\n    }\n\n    setAnalysis({\n      productivityScore: 85,\n      moodTrends: 'Positive after exercise tasks',\n      suggestions: ['Schedule more morning exercise', 'Take breaks between long tasks'],\n      scheduleCategory: scheduleCategory\n    });\n  };\n\n  // Simple test view to check if basic components render\n  if (showBasicView) {\n    return (\n      <SafeAreaView style={{ flex: 1, backgroundColor: '#f0f0f0' }}>\n        <View style={{ padding: 20, alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n          <Text style={{ fontSize: 24, fontWeight: 'bold', marginBottom: 20 }}>Basic Test View</Text>\n          <Text style={{ fontSize: 16, marginBottom: 10 }}>If you can see this, the app is rendering correctly</Text>\n          <TouchableOpacity\n            onPress={() => setShowBasicView(false)}\n            style={{\n              backgroundColor: 'blue',\n              padding: 10,\n              borderRadius: 5,\n              marginTop: 20\n            }}\n          >\n            <Text style={{ color: 'white' }}>Show Full App</Text>\n          </TouchableOpacity>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  // Full app view\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"dark-content\" />\n      <ScrollView\n        style={styles.scrollView}\n        contentContainerStyle={styles.scrollContent}\n      >\n        <Text style={styles.appTitle}>Schedule Bot</Text>\n\n        <Schedule\n          tasks={tasks}\n        />\n\n        <TaskInput\n          onAddTask={addTask}\n        />\n\n        <SuggestionPanel\n          tasks={tasks}\n        />\n\n        <MoodTracker\n          onMoodUpdate={setDailyMood}\n          tasks={tasks}\n        />\n\n\n\n        <DailyAnalysis\n          analysis={analysis}\n          onAnalyze={analyzeDailyPerformance}\n        />\n\n        <ScheduleSharing\n          schedule={tasks}\n        />\n\n        <View style={styles.footer}>\n          <Text style={styles.footerText}>\n            Schedule better, live smarter\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.background,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    padding: 16,\n    paddingTop: 40, // Add padding for status bar\n    paddingBottom: 40,\n  },\n  appTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: COLORS.primary,\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  footer: {\n    marginTop: 30,\n    alignItems: 'center',\n  },\n  footerText: {\n    fontSize: 14,\n    color: COLORS.secondaryDark,\n    fontStyle: 'italic',\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}