{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskInput = function TaskInput(_ref) {\n  var onAddTask = _ref.onAddTask,\n    category = _ref.category;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    duration = _useState4[0],\n    setDuration = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    startTime = _useState6[0],\n    setStartTime = _useState6[1];\n  var _useState7 = useState('medium'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    productivityLevel = _useState8[0],\n    setProductivityLevel = _useState8[1];\n  var handleAddTask = function handleAddTask() {\n    if (!title || !duration || !startTime) {\n      alert('Please fill out all required fields');\n      return;\n    }\n    var newTask = {\n      id: Date.now().toString(),\n      title: title,\n      duration: parseInt(duration, 10),\n      startTime: new Date(\"2023-01-01T\" + startTime).toISOString(),\n      category: category,\n      productivityLevel: productivityLevel,\n      completed: false\n    };\n    onAddTask(newTask);\n    setTitle('');\n    setDuration('');\n    setStartTime('');\n    setProductivityLevel('medium');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Add New Task\"\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Task Title:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: title,\n        onChangeText: setTitle,\n        placeholder: \"What are you planning to do?\"\n      })]\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Duration (min):\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: duration,\n        onChangeText: setDuration,\n        placeholder: \"How long will it take?\",\n        keyboardType: \"numeric\"\n      })]\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Start Time:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: startTime,\n        onChangeText: setStartTime,\n        placeholder: \"HH:MM (24hr format)\"\n      })]\n    }), _jsxs(View, {\n      style: styles.productivityContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Expected Productivity:\"\n      }), _jsx(View, {\n        style: styles.levelButtons,\n        children: ['low', 'medium', 'high'].map(function (level) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.levelButton, productivityLevel === level && styles.selectedLevel, {\n              backgroundColor: getLevelColor(level)\n            }],\n            onPress: function onPress() {\n              return setProductivityLevel(level);\n            },\n            children: _jsx(Text, {\n              style: styles.levelText,\n              children: level.charAt(0).toUpperCase() + level.slice(1)\n            })\n          }, level);\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: handleAddTask,\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \"Add to Schedule\"\n      })\n    })]\n  });\n};\nvar getLevelColor = function getLevelColor(level) {\n  switch (level) {\n    case 'high':\n      return '#4CAF50';\n    case 'medium':\n      return '#FFC107';\n    case 'low':\n      return '#F44336';\n    default:\n      return '#9E9E9E';\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderRadius: 12,\n    padding: 16,\n    marginVertical: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: '#333'\n  },\n  inputRow: {\n    marginBottom: 12\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#666',\n    marginBottom: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 6,\n    padding: 10,\n    fontSize: 16\n  },\n  productivityContainer: {\n    marginVertical: 12\n  },\n  levelButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  levelButton: {\n    flex: 1,\n    paddingVertical: 8,\n    borderRadius: 6,\n    marginHorizontal: 4,\n    alignItems: 'center'\n  },\n  selectedLevel: {\n    borderWidth: 2,\n    borderColor: '#333'\n  },\n  levelText: {\n    color: 'white',\n    fontWeight: '600'\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    paddingVertical: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  addButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default TaskInput;","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","TaskInput","_ref","onAddTask","category","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","duration","setDuration","_useState5","_useState6","startTime","setStartTime","_useState7","_useState8","productivityLevel","setProductivityLevel","handleAddTask","alert","newTask","id","Date","now","toString","parseInt","toISOString","completed","style","styles","container","children","inputRow","label","input","value","onChangeText","placeholder","keyboardType","productivityContainer","levelButtons","map","level","levelButton","selectedLevel","backgroundColor","getLevelColor","onPress","levelText","charAt","toUpperCase","slice","addButton","addButtonText","create","borderRadius","padding","marginVertical","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","marginBottom","color","borderWidth","borderColor","flexDirection","justifyContent","flex","paddingVertical","marginHorizontal","alignItems","marginTop"],"sources":["C:/Users/Seho/Desktop/Seho/Personal Projects/Claude/scheduler_app/src/components/TaskInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\n\nconst TaskInput = ({ onAddTask, category }) => {\n  const [title, setTitle] = useState('');\n  const [duration, setDuration] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [productivityLevel, setProductivityLevel] = useState('medium');\n\n  const handleAddTask = () => {\n    if (!title || !duration || !startTime) {\n      // Simple validation\n      alert('Please fill out all required fields');\n      return;\n    }\n\n    const newTask = {\n      id: Date.now().toString(),\n      title,\n      duration: parseInt(duration, 10),\n      startTime: new Date(`2023-01-01T${startTime}`).toISOString(),\n      category,\n      productivityLevel,\n      completed: false,\n    };\n\n    onAddTask(newTask);\n    \n    // Reset form\n    setTitle('');\n    setDuration('');\n    setStartTime('');\n    setProductivityLevel('medium');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add New Task</Text>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Task Title:</Text>\n        <TextInput\n          style={styles.input}\n          value={title}\n          onChangeText={setTitle}\n          placeholder=\"What are you planning to do?\"\n        />\n      </View>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Duration (min):</Text>\n        <TextInput\n          style={styles.input}\n          value={duration}\n          onChangeText={setDuration}\n          placeholder=\"How long will it take?\"\n          keyboardType=\"numeric\"\n        />\n      </View>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Start Time:</Text>\n        <TextInput\n          style={styles.input}\n          value={startTime}\n          onChangeText={setStartTime}\n          placeholder=\"HH:MM (24hr format)\"\n        />\n      </View>\n      \n      <View style={styles.productivityContainer}>\n        <Text style={styles.label}>Expected Productivity:</Text>\n        <View style={styles.levelButtons}>\n          {['low', 'medium', 'high'].map(level => (\n            <TouchableOpacity\n              key={level}\n              style={[\n                styles.levelButton,\n                productivityLevel === level && styles.selectedLevel,\n                { backgroundColor: getLevelColor(level) }\n              ]}\n              onPress={() => setProductivityLevel(level)}\n            >\n              <Text style={styles.levelText}>{level.charAt(0).toUpperCase() + level.slice(1)}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n      \n      <TouchableOpacity style={styles.addButton} onPress={handleAddTask}>\n        <Text style={styles.addButtonText}>Add to Schedule</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n// Helper function to get color based on productivity level\nconst getLevelColor = (level) => {\n  switch (level) {\n    case 'high': return '#4CAF50';\n    case 'medium': return '#FFC107';\n    case 'low': return '#F44336';\n    default: return '#9E9E9E';\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderRadius: 12,\n    padding: 16,\n    marginVertical: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: '#333',\n  },\n  inputRow: {\n    marginBottom: 12,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#666',\n    marginBottom: 5,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 6,\n    padding: 10,\n    fontSize: 16,\n  },\n  productivityContainer: {\n    marginVertical: 12,\n  },\n  levelButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  levelButton: {\n    flex: 1,\n    paddingVertical: 8,\n    borderRadius: 6,\n    marginHorizontal: 4,\n    alignItems: 'center',\n  },\n  selectedLevel: {\n    borderWidth: 2,\n    borderColor: '#333',\n  },\n  levelText: {\n    color: 'white',\n    fontWeight: '600',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    paddingVertical: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  addButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n});\n\nexport default TaskInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}