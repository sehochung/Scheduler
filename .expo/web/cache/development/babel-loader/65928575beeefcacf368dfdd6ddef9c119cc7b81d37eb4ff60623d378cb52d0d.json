{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport COLORS from \"../colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskInput = function TaskInput(_ref) {\n  var onAddTask = _ref.onAddTask;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    duration = _useState4[0],\n    setDuration = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    startTime = _useState6[0],\n    setStartTime = _useState6[1];\n  var _useState7 = useState('medium'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    productivityLevel = _useState8[0],\n    setProductivityLevel = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedTags = _useState10[0],\n    setSelectedTags = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showTimePicker = _useState12[0],\n    setShowTimePicker = _useState12[1];\n  var _useState13 = useState('picker'),\n    _useState14 = _slicedToArray(_useState13, 2),\n    timeInputMode = _useState14[0],\n    setTimeInputMode = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    timeInputText = _useState16[0],\n    setTimeInputText = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    timeInputError = _useState18[0],\n    setTimeInputError = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showTimeModal = _useState20[0],\n    setShowTimeModal = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    tempTime = _useState22[0],\n    setTempTime = _useState22[1];\n  var _useState23 = useState('12h'),\n    _useState24 = _slicedToArray(_useState23, 2),\n    timeFormat = _useState24[0],\n    setTimeFormat = _useState24[1];\n  var availableTags = ['work', 'leisure', 'grind', 'personal', 'meeting', 'health', 'learning'];\n  function getDisplayTime(timeString) {\n    if (!timeString) return 'Select a time';\n    var _timeString$split$map = timeString.split(':').map(Number),\n      _timeString$split$map2 = _slicedToArray(_timeString$split$map, 2),\n      hours = _timeString$split$map2[0],\n      minutes = _timeString$split$map2[1];\n    var period = hours >= 12 ? 'PM' : 'AM';\n    var displayHour = hours % 12 === 0 ? 12 : hours % 12;\n    return displayHour + \":\" + minutes.toString().padStart(2, '0') + \" \" + period;\n  }\n  function get24HourDisplayTime(timeString) {\n    var _timeString$split$map3 = timeString.split(':').map(Number),\n      _timeString$split$map4 = _slicedToArray(_timeString$split$map3, 2),\n      hours = _timeString$split$map4[0],\n      minutes = _timeString$split$map4[1];\n    return hours.toString().padStart(2, '0') + \":\" + minutes.toString().padStart(2, '0');\n  }\n  function getCurrentDisplayTime() {\n    if (!startTime) {\n      return 'Select a time';\n    }\n    return timeFormat === '12h' ? getDisplayTime(startTime) : get24HourDisplayTime(startTime);\n  }\n  var generateTimeOptions = function generateTimeOptions() {\n    var options = [];\n    for (var hour = 0; hour < 24; hour++) {\n      for (var minute = 0; minute < 60; minute += 15) {\n        var timeValue = hour.toString().padStart(2, '0') + \":\" + minute.toString().padStart(2, '0');\n        var period = hour >= 12 ? 'PM' : 'AM';\n        var displayHour = hour % 12 === 0 ? 12 : hour % 12;\n        var displayTime = displayHour + \":\" + minute.toString().padStart(2, '0') + \" \" + period;\n        options.push({\n          value: timeValue,\n          label: displayTime\n        });\n      }\n    }\n    return options;\n  };\n  var timeOptions = generateTimeOptions();\n  var handleTagToggle = function handleTagToggle(tag) {\n    if (selectedTags.includes(tag)) {\n      setSelectedTags(selectedTags.filter(function (t) {\n        return t !== tag;\n      }));\n    } else {\n      setSelectedTags([].concat(_toConsumableArray(selectedTags), [tag]));\n    }\n  };\n  var timeToNumbers = function timeToNumbers(timeString) {\n    var _timeString$split$map5 = timeString.split(':').map(Number),\n      _timeString$split$map6 = _slicedToArray(_timeString$split$map5, 2),\n      hours = _timeString$split$map6[0],\n      minutes = _timeString$split$map6[1];\n    return {\n      hours: hours,\n      minutes: minutes\n    };\n  };\n  var numbersToTime = function numbersToTime(hours, minutes) {\n    return hours.toString().padStart(2, '0') + \":\" + minutes.toString().padStart(2, '0');\n  };\n  var handleTimeChange = function handleTimeChange(event, selectedTime) {\n    setShowTimePicker(false);\n    if (selectedTime) {\n      var hours = selectedTime.getHours();\n      var minutes = selectedTime.getMinutes();\n      setStartTime(numbersToTime(hours, minutes));\n    }\n  };\n  var showTimePickerModal = function showTimePickerModal() {\n    setShowTimePicker(true);\n  };\n  var validateTimeInput = function validateTimeInput(input) {\n    var twelveHourRegex = /^(0?[1-9]|1[0-2]):([0-5][0-9])\\s*(am|pm|AM|PM)$/;\n    var twentyFourHourRegex = /^([01]?[0-9]|2[0-3]):([0-5][0-9])$/;\n    if (twelveHourRegex.test(input)) {\n      var _input$match = input.match(twelveHourRegex),\n        _input$match2 = _slicedToArray(_input$match, 4),\n        hours = _input$match2[1],\n        minutes = _input$match2[2],\n        period = _input$match2[3];\n      var numericHours = parseInt(hours, 10);\n      if (period.toLowerCase() === 'pm' && numericHours < 12) {\n        numericHours += 12;\n      } else if (period.toLowerCase() === 'am' && numericHours === 12) {\n        numericHours = 0;\n      }\n      return {\n        valid: true,\n        time: numbersToTime(numericHours, parseInt(minutes, 10))\n      };\n    } else if (twentyFourHourRegex.test(input)) {\n      var _input$match3 = input.match(twentyFourHourRegex),\n        _input$match4 = _slicedToArray(_input$match3, 3),\n        _hours = _input$match4[1],\n        _minutes = _input$match4[2];\n      return {\n        valid: true,\n        time: numbersToTime(parseInt(_hours, 10), parseInt(_minutes, 10))\n      };\n    }\n    return {\n      valid: false,\n      error: 'Invalid time format. Please use HH:MM AM/PM or 24-hour format.'\n    };\n  };\n  var handleTimeInputChange = function handleTimeInputChange(text) {\n    setTimeInputText(text);\n    setTimeInputError('');\n  };\n  var applyManualTimeInput = function applyManualTimeInput() {\n    var result = validateTimeInput(timeInputText);\n    if (result.valid) {\n      setStartTime(result.time);\n      setTimeInputMode('picker');\n      setTimeInputText('');\n      setTimeInputError('');\n    } else {\n      setTimeInputError(result.error);\n    }\n  };\n  var toggleTimeFormat = function toggleTimeFormat() {\n    setTimeFormat(timeFormat === '12h' ? '24h' : '12h');\n  };\n  var openTimeModal = function openTimeModal() {\n    setTempTime(startTime || '00:00');\n    setShowTimeModal(true);\n  };\n  var confirmTime = function confirmTime() {\n    setStartTime(tempTime);\n    setShowTimeModal(false);\n  };\n  var updateTimeFromSliders = function updateTimeFromSliders(hours, minutes) {\n    var newTime = hours.toString().padStart(2, '0') + \":\" + minutes.toString().padStart(2, '0');\n    setTempTime(newTime);\n  };\n  var handleAddTask = function handleAddTask() {\n    if (!title || !duration) {\n      alert('Please fill out all required fields');\n      return;\n    }\n    var newTask = {\n      id: Date.now().toString(),\n      title: title,\n      duration: parseInt(duration, 10),\n      startTime: new Date(\"2023-01-01T\" + startTime).toISOString(),\n      tags: selectedTags,\n      productivityLevel: productivityLevel,\n      completed: false\n    };\n    onAddTask(newTask);\n    setTitle('');\n    setDuration('');\n    setStartTime('');\n    setSelectedTags([]);\n    setProductivityLevel('medium');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Add New Task\"\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Task Title:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: title,\n        onChangeText: setTitle,\n        placeholder: \"What are you planning to do?\",\n        placeholderTextColor: COLORS.secondaryDark\n      })]\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Duration (min):\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: duration,\n        onChangeText: setDuration,\n        placeholder: \"How long will it take?\",\n        placeholderTextColor: COLORS.secondaryDark,\n        keyboardType: \"numeric\"\n      })]\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Start Time:\"\n      }), _jsxs(View, {\n        style: styles.timeInputContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.timeDisplay,\n          onPress: openTimeModal,\n          children: _jsx(Text, {\n            style: [styles.timeDisplayText, !startTime && styles.placeholderText],\n            children: getCurrentDisplayTime()\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.formatToggleButton,\n          onPress: toggleTimeFormat,\n          children: _jsx(Text, {\n            style: styles.formatToggleText,\n            children: timeFormat === '12h' ? '24h' : '12h'\n          })\n        })]\n      }), _jsx(Modal, {\n        visible: showTimeModal,\n        transparent: true,\n        animationType: \"fade\",\n        onRequestClose: function onRequestClose() {\n          return setShowTimeModal(false);\n        },\n        children: _jsx(View, {\n          style: styles.modalOverlay,\n          children: _jsxs(View, {\n            style: styles.modalContent,\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Select Time\"\n            }), _jsxs(View, {\n              style: styles.timeInputTabs,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.timeInputTab, timeInputMode === 'picker' && styles.activeTimeInputTab],\n                onPress: function onPress() {\n                  return setTimeInputMode('picker');\n                },\n                children: _jsx(Text, {\n                  style: styles.timeInputTabText,\n                  children: \"Picker\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.timeInputTab, timeInputMode === 'text' && styles.activeTimeInputTab],\n                onPress: function onPress() {\n                  return setTimeInputMode('text');\n                },\n                children: _jsx(Text, {\n                  style: styles.timeInputTabText,\n                  children: \"Manual\"\n                })\n              })]\n            }), timeInputMode === 'picker' && _jsx(View, {\n              style: styles.timePickerMode,\n              children: Platform.OS === 'web' ? _jsxs(View, {\n                style: styles.webTimePicker,\n                children: [_jsxs(View, {\n                  style: styles.timePickerContent,\n                  children: [_jsx(Text, {\n                    style: styles.timeValue,\n                    children: minutesToTime(timeToMinutes(tempTime))\n                  }), _jsx(View, {\n                    style: styles.timeSliderContainer,\n                    children: _jsx(\"input\", {\n                      type: \"range\",\n                      min: \"0\",\n                      max: \"1439\",\n                      value: timeToMinutes(tempTime),\n                      max: \"23\",\n                      value: timeToNumbers(tempTime).hours,\n                      onChange: function onChange(e) {\n                        var hours = parseInt(e.target.value);\n                        updateTimeFromSliders(hours, timeToNumbers(tempTime).minutes);\n                      },\n                      style: {\n                        width: '100%',\n                        margin: '0 10px'\n                      }\n                    })\n                  })]\n                }), _jsxs(View, {\n                  style: styles.timeSliderContainer,\n                  children: [_jsx(Text, {\n                    style: styles.timeSliderLabel,\n                    children: \"Minute:\"\n                  }), _jsxs(View, {\n                    style: styles.timeSliderRow,\n                    children: [_jsx(Text, {\n                      style: styles.timeSliderValue,\n                      children: timeToNumbers(tempTime).minutes\n                    }), _jsx(\"input\", {\n                      type: \"range\",\n                      min: \"0\",\n                      max: \"59\",\n                      value: timeToNumbers(tempTime).minutes,\n                      onChange: function onChange(e) {\n                        var minutes = parseInt(e.target.value);\n                        updateTimeFromSliders(timeToNumbers(tempTime).hours, minutes);\n                      },\n                      style: {\n                        width: '100%',\n                        margin: '0 10px'\n                      }\n                    })]\n                  })]\n                }), _jsxs(View, {\n                  style: styles.timePresets,\n                  children: [_jsx(Text, {\n                    style: styles.timePresetsLabel,\n                    children: \"Quick Select:\"\n                  }), _jsx(View, {\n                    style: styles.timePresetsRow,\n                    children: ['09:00', '12:00', '15:00', '18:00'].map(function (time) {\n                      return _jsx(TouchableOpacity, {\n                        style: [styles.timePreset, tempTime === time && styles.activeTimePreset],\n                        onPress: function onPress() {\n                          return setTempTime(time);\n                        },\n                        children: _jsx(Text, {\n                          style: styles.timePresetText,\n                          children: timeFormat === '12h' ? getDisplayTime(time) : time\n                        })\n                      }, time);\n                    })\n                  })]\n                })]\n              }) : _jsx(DateTimePicker, {\n                value: new Date(\"2023-01-01T\" + tempTime),\n                mode: \"time\",\n                is24Hour: timeFormat === '24h',\n                display: \"spinner\",\n                onChange: function onChange(event, selectedTime) {\n                  if (selectedTime) {\n                    var hours = selectedTime.getHours();\n                    var minutes = selectedTime.getMinutes();\n                    setTempTime(numbersToTime(hours, minutes));\n                  }\n                }\n              })\n            }), timeInputMode === 'text' && _jsxs(View, {\n              style: styles.manualTimeInput,\n              children: [_jsx(TextInput, {\n                style: [styles.manualTimeInputField, timeInputError && styles.inputError],\n                value: timeInputText,\n                onChangeText: handleTimeInputChange,\n                placeholder: timeFormat === '12h' ? \"e.g., 9:30 AM\" : \"e.g., 13:30\",\n                placeholderTextColor: COLORS.secondaryDark\n              }), timeInputError ? _jsx(Text, {\n                style: styles.timeInputErrorText,\n                children: timeInputError\n              }) : _jsxs(Text, {\n                style: styles.timeInputHint,\n                children: [\"Enter time in \", timeFormat === '12h' ? '12-hour (9:30 AM)' : '24-hour (13:30)', \" format\"]\n              }), _jsx(TouchableOpacity, {\n                style: styles.applyTimeButton,\n                onPress: applyManualTimeInput,\n                children: _jsx(Text, {\n                  style: styles.applyTimeButtonText,\n                  children: \"Apply\"\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.modalFooter,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.modalButton, styles.cancelButton],\n                onPress: function onPress() {\n                  return setShowTimeModal(false);\n                },\n                children: _jsx(Text, {\n                  style: styles.cancelButtonText,\n                  children: \"Cancel\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.modalButton, styles.confirmButton],\n                onPress: confirmTime,\n                children: _jsx(Text, {\n                  style: styles.confirmButtonText,\n                  children: \"Confirm\"\n                })\n              })]\n            })]\n          })\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.tagsSection,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Tags (optional):\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        children: _jsx(View, {\n          style: styles.tagsContainer,\n          children: availableTags.map(function (tag) {\n            return _jsx(TouchableOpacity, {\n              style: [styles.tagBadge, selectedTags.includes(tag) ? {\n                backgroundColor: getTagColor(tag)\n              } : styles.unselectedTag],\n              onPress: function onPress() {\n                return handleTagToggle(tag);\n              },\n              children: _jsx(Text, {\n                style: [styles.tagText, selectedTags.includes(tag) ? styles.selectedTagText : styles.unselectedTagText],\n                children: tag\n              })\n            }, tag);\n          })\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: handleAddTask,\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \"Add to Schedule\"\n      })\n    })]\n  });\n};\nvar getTagColor = function getTagColor(tag) {\n  switch (tag.toLowerCase()) {\n    case 'work':\n      return COLORS.primary;\n    case 'leisure':\n      return COLORS.success;\n    case 'grind':\n      return COLORS.secondaryDark;\n    case 'personal':\n      return '#9C27B0';\n    case 'meeting':\n      return '#FF9800';\n    case 'health':\n      return '#E91E63';\n    case 'learning':\n      return '#00BCD4';\n    default:\n      return COLORS.secondary;\n  }\n};\nvar getProductivityColor = function getProductivityColor(level) {\n  switch (level) {\n    case 'high':\n      return COLORS.success;\n    case 'medium':\n      return COLORS.warning;\n    case 'low':\n      return COLORS.danger;\n    default:\n      return COLORS.secondaryDark;\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLORS.cardBackground,\n    borderRadius: 12,\n    padding: 16,\n    marginVertical: 10,\n    shadowColor: COLORS.black,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    borderLeftWidth: 4,\n    borderLeftColor: COLORS.primary\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: COLORS.black\n  },\n  inputRow: {\n    marginBottom: 12\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n    marginBottom: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    padding: 10,\n    fontSize: 16,\n    backgroundColor: COLORS.white,\n    color: COLORS.black\n  },\n  timeInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    backgroundColor: COLORS.white,\n    overflow: 'hidden'\n  },\n  timeDisplay: {\n    flex: 1,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    justifyContent: 'center'\n  },\n  timeDisplayText: {\n    fontSize: 16,\n    color: COLORS.black\n  },\n  placeholderText: {\n    color: COLORS.secondaryDark\n  },\n  formatToggleButton: {\n    backgroundColor: COLORS.secondaryLight,\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    borderLeftWidth: 1,\n    borderLeftColor: COLORS.secondary\n  },\n  formatToggleText: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: COLORS.secondaryDark\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    width: '90%',\n    maxWidth: 400,\n    backgroundColor: COLORS.white,\n    borderRadius: 10,\n    padding: 20,\n    shadowColor: COLORS.black,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: COLORS.primary,\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  timeInputTabs: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.secondaryLight,\n    marginBottom: 15\n  },\n  timeInputTab: {\n    flex: 1,\n    paddingVertical: 10,\n    alignItems: 'center'\n  },\n  activeTimeInputTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS.primary\n  },\n  timeInputTabText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: COLORS.secondaryDark\n  },\n  timePickerMode: {\n    marginBottom: 20\n  },\n  webTimePicker: {\n    width: '100%'\n  },\n  timeSliderContainer: {\n    marginBottom: 15\n  },\n  timeSliderLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n    marginBottom: 5\n  },\n  timeSliderRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  timeSliderValue: {\n    width: 35,\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: COLORS.primary\n  },\n  timePresets: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  timePresetsLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n    marginBottom: 8\n  },\n  timePresetsRow: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  timePreset: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 20,\n    marginRight: 8,\n    marginBottom: 8,\n    backgroundColor: COLORS.secondaryLight,\n    borderWidth: 1,\n    borderColor: COLORS.secondary\n  },\n  activeTimePreset: {\n    backgroundColor: COLORS.primary,\n    borderColor: COLORS.primary\n  },\n  timePresetText: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: COLORS.secondaryDark\n  },\n  manualTimeInput: {\n    width: '100%',\n    marginBottom: 20\n  },\n  manualTimeInputField: {\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    padding: 10,\n    fontSize: 16,\n    backgroundColor: COLORS.white,\n    marginBottom: 5\n  },\n  inputError: {\n    borderColor: COLORS.danger\n  },\n  timeInputErrorText: {\n    color: COLORS.danger,\n    fontSize: 12,\n    marginBottom: 5\n  },\n  timeInputHint: {\n    color: COLORS.secondaryDark,\n    fontSize: 12,\n    marginBottom: 10\n  },\n  applyTimeButton: {\n    backgroundColor: COLORS.primary,\n    paddingVertical: 8,\n    borderRadius: 6,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  applyTimeButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n    fontSize: 14\n  },\n  modalFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginTop: 5\n  },\n  modalButton: {\n    flex: 1,\n    paddingVertical: 10,\n    alignItems: 'center',\n    borderRadius: 6,\n    marginHorizontal: 5\n  },\n  cancelButton: {\n    backgroundColor: COLORS.secondaryLight\n  },\n  cancelButtonText: {\n    color: COLORS.secondaryDark,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  confirmButton: {\n    backgroundColor: COLORS.primary\n  },\n  confirmButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  timePickerContainer: {\n    flex: 1,\n    borderWidth: Platform.OS !== 'web' ? 1 : 0,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    backgroundColor: COLORS.white,\n    overflow: 'hidden'\n  },\n  timePicker: {\n    width: '100%',\n    height: 50\n  },\n  tagsSection: {\n    marginVertical: 12\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 5\n  },\n  tagBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 20,\n    marginRight: 8,\n    marginBottom: 8\n  },\n  unselectedTag: {\n    backgroundColor: COLORS.secondaryLight,\n    borderWidth: 1,\n    borderColor: COLORS.secondary\n  },\n  tagText: {\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  selectedTagText: {\n    color: COLORS.white\n  },\n  unselectedTagText: {\n    color: COLORS.secondaryDark\n  },\n  productivityContainer: {\n    marginVertical: 12\n  },\n  levelButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  levelButton: {\n    flex: 1,\n    paddingVertical: 8,\n    borderRadius: 6,\n    marginHorizontal: 4,\n    alignItems: 'center'\n  },\n  selectedLevel: {\n    borderWidth: 2,\n    borderColor: COLORS.secondaryDark\n  },\n  levelText: {\n    color: COLORS.white,\n    fontWeight: '600'\n  },\n  addButton: {\n    backgroundColor: COLORS.primary,\n    paddingVertical: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  addButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  timeOptionsContainer: {\n    width: '100%',\n    maxHeight: 300\n  },\n  timeOption: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.lightGray\n  },\n  selectedTimeOption: {\n    backgroundColor: COLORS.lightPrimary\n  },\n  timeOptionText: {\n    fontSize: 16\n  },\n  selectedTimeOptionText: {\n    fontWeight: 'bold',\n    color: COLORS.primary\n  },\n  closeButton: {\n    marginTop: 15,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: COLORS.primary,\n    borderRadius: 5\n  },\n  closeButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold'\n  }\n});\nexport default TaskInput;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","StyleSheet","TouchableOpacity","ScrollView","Platform","Modal","Picker","DateTimePicker","COLORS","jsx","_jsx","jsxs","_jsxs","TaskInput","_ref","onAddTask","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","duration","setDuration","_useState5","_useState6","startTime","setStartTime","_useState7","_useState8","productivityLevel","setProductivityLevel","_useState9","_useState10","selectedTags","setSelectedTags","_useState11","_useState12","showTimePicker","setShowTimePicker","_useState13","_useState14","timeInputMode","setTimeInputMode","_useState15","_useState16","timeInputText","setTimeInputText","_useState17","_useState18","timeInputError","setTimeInputError","_useState19","_useState20","showTimeModal","setShowTimeModal","_useState21","_useState22","tempTime","setTempTime","_useState23","_useState24","timeFormat","setTimeFormat","availableTags","getDisplayTime","timeString","_timeString$split$map","split","map","Number","_timeString$split$map2","hours","minutes","period","displayHour","toString","padStart","get24HourDisplayTime","_timeString$split$map3","_timeString$split$map4","getCurrentDisplayTime","generateTimeOptions","options","hour","minute","timeValue","displayTime","push","value","label","timeOptions","handleTagToggle","tag","includes","filter","t","concat","_toConsumableArray","timeToNumbers","_timeString$split$map5","_timeString$split$map6","numbersToTime","handleTimeChange","event","selectedTime","getHours","getMinutes","showTimePickerModal","validateTimeInput","input","twelveHourRegex","twentyFourHourRegex","test","_input$match","match","_input$match2","numericHours","parseInt","toLowerCase","valid","time","_input$match3","_input$match4","error","handleTimeInputChange","text","applyManualTimeInput","result","toggleTimeFormat","openTimeModal","confirmTime","updateTimeFromSliders","newTime","handleAddTask","alert","newTask","id","Date","now","toISOString","tags","completed","style","styles","container","children","inputRow","onChangeText","placeholder","placeholderTextColor","secondaryDark","keyboardType","timeInputContainer","timeDisplay","onPress","timeDisplayText","placeholderText","formatToggleButton","formatToggleText","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","modalTitle","timeInputTabs","timeInputTab","activeTimeInputTab","timeInputTabText","timePickerMode","OS","webTimePicker","timePickerContent","minutesToTime","timeToMinutes","timeSliderContainer","type","min","max","onChange","e","target","width","margin","timeSliderLabel","timeSliderRow","timeSliderValue","timePresets","timePresetsLabel","timePresetsRow","timePreset","activeTimePreset","timePresetText","mode","is24Hour","display","manualTimeInput","manualTimeInputField","inputError","timeInputErrorText","timeInputHint","applyTimeButton","applyTimeButtonText","modalFooter","modalButton","cancelButton","cancelButtonText","confirmButton","confirmButtonText","tagsSection","horizontal","showsHorizontalScrollIndicator","tagsContainer","tagBadge","backgroundColor","getTagColor","unselectedTag","tagText","selectedTagText","unselectedTagText","addButton","addButtonText","primary","success","secondary","getProductivityColor","level","warning","danger","create","cardBackground","borderRadius","padding","marginVertical","shadowColor","black","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderLeftWidth","borderLeftColor","fontSize","fontWeight","marginBottom","color","borderWidth","borderColor","white","flexDirection","alignItems","justifyContent","overflow","flex","paddingVertical","paddingHorizontal","secondaryLight","maxWidth","textAlign","borderBottomWidth","borderBottomColor","marginTop","flexWrap","marginRight","marginHorizontal","timePickerContainer","timePicker","productivityContainer","levelButtons","levelButton","selectedLevel","levelText","timeOptionsContainer","maxHeight","timeOption","lightGray","selectedTimeOption","lightPrimary","timeOptionText","selectedTimeOptionText","closeButton","closeButtonText"],"sources":["C:/Users/Seho/Desktop/Seho/Personal Projects/Claude/scheduler_app/src/components/TaskInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ScrollView, Platform, Modal } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport COLORS from '../colors';\n\nconst TaskInput = ({ onAddTask }) => {\n  const [title, setTitle] = useState('');\n  const [duration, setDuration] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [productivityLevel, setProductivityLevel] = useState('medium');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [showTimePicker, setShowTimePicker] = useState(false);\n  const [timeInputMode, setTimeInputMode] = useState('picker'); // 'picker' or 'text'\n  const [timeInputText, setTimeInputText] = useState('');\n  const [timeInputError, setTimeInputError] = useState('');\n  const [showTimeModal, setShowTimeModal] = useState(false);\n  const [tempTime, setTempTime] = useState('');\n  const [timeFormat, setTimeFormat] = useState('12h'); // '12h' or '24h'\n\n  const availableTags = ['work', 'leisure', 'grind', 'personal', 'meeting', 'health', 'learning'];\n  \n  // Format time for display (12-hour format with AM/PM)\n  function getDisplayTime(timeString) {\n    if (!timeString) return 'Select a time'; // Handle empty time\n    \n    const [hours, minutes] = timeString.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const displayHour = hours % 12 === 0 ? 12 : hours % 12;\n    return `${displayHour}:${minutes.toString().padStart(2, '0')} ${period}`;\n  }\n\n  // Format time for 24-hour display\n  function get24HourDisplayTime(timeString) {\n    const [hours, minutes] = timeString.split(':').map(Number);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  }\n\n  // Get current display time based on format\n  function getCurrentDisplayTime() {\n    if (!startTime) {\n      return 'Select a time';\n    }\n    return timeFormat === '12h' ? getDisplayTime(startTime) : get24HourDisplayTime(startTime);\n  }\n\n  // Generate time options in 15-minute intervals\n  const generateTimeOptions = () => {\n    const options = [];\n    \n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60; minute += 15) {\n        const timeValue = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const period = hour >= 12 ? 'PM' : 'AM';\n        const displayHour = hour % 12 === 0 ? 12 : hour % 12;\n        const displayTime = `${displayHour}:${minute.toString().padStart(2, '0')} ${period}`;\n        \n        options.push({\n          value: timeValue,\n          label: displayTime\n        });\n      }\n    }\n    return options;\n  };\n\n  const timeOptions = generateTimeOptions();\n\n  const handleTagToggle = (tag) => {\n    if (selectedTags.includes(tag)) {\n      setSelectedTags(selectedTags.filter(t => t !== tag));\n    } else {\n      setSelectedTags([...selectedTags, tag]);\n    }\n  };\n\n  // Convert time string to hours and minutes\n  const timeToNumbers = (timeString) => {\n    const [hours, minutes] = timeString.split(':').map(Number);\n    return { hours, minutes };\n  };\n\n  // Convert hours and minutes to time string\n  const numbersToTime = (hours, minutes) => {\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  };\n\n  const handleTimeChange = (event, selectedTime) => {\n    setShowTimePicker(false);\n    if (selectedTime) {\n      const hours = selectedTime.getHours();\n      const minutes = selectedTime.getMinutes();\n      setStartTime(numbersToTime(hours, minutes));\n    }\n  };\n\n  const showTimePickerModal = () => {\n    setShowTimePicker(true);\n  };\n\n  // Function to validate manually entered time\n  const validateTimeInput = (input) => {\n    // For 12-hour format with AM/PM\n    const twelveHourRegex = /^(0?[1-9]|1[0-2]):([0-5][0-9])\\s*(am|pm|AM|PM)$/;\n    // For 24-hour format\n    const twentyFourHourRegex = /^([01]?[0-9]|2[0-3]):([0-5][0-9])$/;\n    \n    if (twelveHourRegex.test(input)) {\n      // Extract hours, minutes, and period from the input\n      const [, hours, minutes, period] = input.match(twelveHourRegex);\n      let numericHours = parseInt(hours, 10);\n      \n      // Convert to 24-hour format\n      if (period.toLowerCase() === 'pm' && numericHours < 12) {\n        numericHours += 12;\n      } else if (period.toLowerCase() === 'am' && numericHours === 12) {\n        numericHours = 0;\n      }\n      \n      return {\n        valid: true,\n        time: numbersToTime(numericHours, parseInt(minutes, 10))\n      };\n    } else if (twentyFourHourRegex.test(input)) {\n      // Extract hours and minutes from the input\n      const [, hours, minutes] = input.match(twentyFourHourRegex);\n      return {\n        valid: true,\n        time: numbersToTime(parseInt(hours, 10), parseInt(minutes, 10))\n      };\n    }\n    \n    return {\n      valid: false,\n      error: 'Invalid time format. Please use HH:MM AM/PM or 24-hour format.'\n    };\n  };\n\n  // Handle input in text mode\n  const handleTimeInputChange = (text) => {\n    setTimeInputText(text);\n    setTimeInputError('');\n  };\n\n  // Apply text input time\n  const applyManualTimeInput = () => {\n    const result = validateTimeInput(timeInputText);\n    if (result.valid) {\n      setStartTime(result.time);\n      setTimeInputMode('picker');\n      setTimeInputText('');\n      setTimeInputError('');\n    } else {\n      setTimeInputError(result.error);\n    }\n  };\n\n  // Toggle time format\n  const toggleTimeFormat = () => {\n    setTimeFormat(timeFormat === '12h' ? '24h' : '12h');\n  };\n\n  // Open custom time modal\n  const openTimeModal = () => {\n    // Initialize with '00:00' if no time is selected\n    setTempTime(startTime || '00:00');\n    setShowTimeModal(true);\n  };\n\n  // Handle time confirmation in modal\n  const confirmTime = () => {\n    setStartTime(tempTime);\n    setShowTimeModal(false);\n  };\n\n  // Update time from sliders\n  const updateTimeFromSliders = (hours, minutes) => {\n    const newTime = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n    setTempTime(newTime);\n  };\n\n  const handleAddTask = () => {\n    if (!title || !duration) {\n      // Simple validation\n      alert('Please fill out all required fields');\n      return;\n    }\n\n    const newTask = {\n      id: Date.now().toString(),\n      title,\n      duration: parseInt(duration, 10),\n      startTime: new Date(`2023-01-01T${startTime}`).toISOString(),\n      tags: selectedTags,\n      productivityLevel,\n      completed: false,\n    };\n\n    onAddTask(newTask);\n    \n    // Reset form\n    setTitle('');\n    setDuration('');\n    setStartTime('');\n    setSelectedTags([]);\n    setProductivityLevel('medium');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add New Task</Text>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Task Title:</Text>\n        <TextInput\n          style={styles.input}\n          value={title}\n          onChangeText={setTitle}\n          placeholder=\"What are you planning to do?\"\n          placeholderTextColor={COLORS.secondaryDark}\n        />\n      </View>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Duration (min):</Text>\n        <TextInput\n          style={styles.input}\n          value={duration}\n          onChangeText={setDuration}\n          placeholder=\"How long will it take?\"\n          placeholderTextColor={COLORS.secondaryDark}\n          keyboardType=\"numeric\"\n        />\n      </View>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Start Time:</Text>\n        \n        {/* Time Input Container */}\n        <View style={styles.timeInputContainer}>\n          {/* Time Display */}\n          <TouchableOpacity \n            style={styles.timeDisplay} \n            onPress={openTimeModal}\n          >\n            <Text style={[\n              styles.timeDisplayText,\n              !startTime && styles.placeholderText\n            ]}>\n              {getCurrentDisplayTime()}\n            </Text>\n          </TouchableOpacity>\n          \n          {/* Format Toggle Button */}\n          <TouchableOpacity \n            style={styles.formatToggleButton} \n            onPress={toggleTimeFormat}\n          >\n            <Text style={styles.formatToggleText}>\n              {timeFormat === '12h' ? '24h' : '12h'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n        \n        {/* Custom Time Modal */}\n        <Modal\n          visible={showTimeModal}\n          transparent={true}\n          animationType=\"fade\"\n          onRequestClose={() => setShowTimeModal(false)}\n        >\n          <View style={styles.modalOverlay}>\n            <View style={styles.modalContent}>\n              <Text style={styles.modalTitle}>Select Time</Text>\n              \n              {/* Time Input Mode Tabs */}\n              <View style={styles.timeInputTabs}>\n                <TouchableOpacity\n                  style={[\n                    styles.timeInputTab,\n                    timeInputMode === 'picker' && styles.activeTimeInputTab\n                  ]}\n                  onPress={() => setTimeInputMode('picker')}\n                >\n                  <Text style={styles.timeInputTabText}>Picker</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[\n                    styles.timeInputTab,\n                    timeInputMode === 'text' && styles.activeTimeInputTab\n                  ]}\n                  onPress={() => setTimeInputMode('text')}\n                >\n                  <Text style={styles.timeInputTabText}>Manual</Text>\n                </TouchableOpacity>\n              </View>\n              \n              {/* Time Picker Mode */}\n              {timeInputMode === 'picker' && (\n                <View style={styles.timePickerMode}>\n                  {/* Time Picker based on platform */}\n                  {Platform.OS === 'web' ? (\n                    <View style={styles.webTimePicker}>\n                      {/* Time Display and Slider Container */}\n                      <View style={styles.timePickerContent}>\n                        {/* Time Display */}\n                        <Text style={styles.timeValue}>\n                          {minutesToTime(timeToMinutes(tempTime))}\n                        </Text>\n                        \n                        {/* Single Time Slider */}\n                        <View style={styles.timeSliderContainer}>\n                          <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"1439\"\n                            value={timeToMinutes(tempTime)}\n                            max=\"23\"\n                            value={timeToNumbers(tempTime).hours}\n                            onChange={(e) => {\n                              const hours = parseInt(e.target.value);\n                              updateTimeFromSliders(\n                                hours,\n                                timeToNumbers(tempTime).minutes\n                              );\n                            }}\n                            style={{\n                              width: '100%',\n                              margin: '0 10px',\n                            }}\n                          />\n                        </View>\n                      </View>\n                      \n                      {/* Minute Slider */}\n                      <View style={styles.timeSliderContainer}>\n                        <Text style={styles.timeSliderLabel}>Minute:</Text>\n                        <View style={styles.timeSliderRow}>\n                          <Text style={styles.timeSliderValue}>\n                            {timeToNumbers(tempTime).minutes}\n                          </Text>\n                          <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"59\"\n                            value={timeToNumbers(tempTime).minutes}\n                            onChange={(e) => {\n                              const minutes = parseInt(e.target.value);\n                              updateTimeFromSliders(\n                                timeToNumbers(tempTime).hours,\n                                minutes\n                              );\n                            }}\n                            style={{\n                              width: '100%',\n                              margin: '0 10px',\n                            }}\n                          />\n                        </View>\n                      </View>\n                      \n                      {/* Common Time Presets */}\n                      <View style={styles.timePresets}>\n                        <Text style={styles.timePresetsLabel}>Quick Select:</Text>\n                        <View style={styles.timePresetsRow}>\n                          {['09:00', '12:00', '15:00', '18:00'].map(time => (\n                            <TouchableOpacity\n                              key={time}\n                              style={[\n                                styles.timePreset,\n                                tempTime === time && styles.activeTimePreset\n                              ]}\n                              onPress={() => setTempTime(time)}\n                            >\n                              <Text style={styles.timePresetText}>\n                                {timeFormat === '12h' ? getDisplayTime(time) : time}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      </View>\n                    </View>\n                  ) : (\n                    // Native DateTimePicker for mobile\n                    <DateTimePicker\n                      value={new Date(`2023-01-01T${tempTime}`)}\n                      mode=\"time\"\n                      is24Hour={timeFormat === '24h'}\n                      display=\"spinner\"\n                      onChange={(event, selectedTime) => {\n                        if (selectedTime) {\n                          const hours = selectedTime.getHours();\n                          const minutes = selectedTime.getMinutes();\n                          setTempTime(numbersToTime(hours, minutes));\n                        }\n                      }}\n                    />\n                  )}\n                </View>\n              )}\n              \n              {/* Manual Text Input Mode */}\n              {timeInputMode === 'text' && (\n                <View style={styles.manualTimeInput}>\n                  <TextInput\n                    style={[\n                      styles.manualTimeInputField,\n                      timeInputError && styles.inputError\n                    ]}\n                    value={timeInputText}\n                    onChangeText={handleTimeInputChange}\n                    placeholder={timeFormat === '12h' ? \"e.g., 9:30 AM\" : \"e.g., 13:30\"}\n                    placeholderTextColor={COLORS.secondaryDark}\n                  />\n                  {timeInputError ? (\n                    <Text style={styles.timeInputErrorText}>{timeInputError}</Text>\n                  ) : (\n                    <Text style={styles.timeInputHint}>\n                      Enter time in {timeFormat === '12h' ? '12-hour (9:30 AM)' : '24-hour (13:30)'} format\n                    </Text>\n                  )}\n                  <TouchableOpacity\n                    style={styles.applyTimeButton}\n                    onPress={applyManualTimeInput}\n                  >\n                    <Text style={styles.applyTimeButtonText}>Apply</Text>\n                  </TouchableOpacity>\n                </View>\n              )}\n              \n              {/* Modal Footer Buttons */}\n              <View style={styles.modalFooter}>\n                <TouchableOpacity\n                  style={[styles.modalButton, styles.cancelButton]}\n                  onPress={() => setShowTimeModal(false)}\n                >\n                  <Text style={styles.cancelButtonText}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.modalButton, styles.confirmButton]}\n                  onPress={confirmTime}\n                >\n                  <Text style={styles.confirmButtonText}>Confirm</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </View>\n      \n      <View style={styles.tagsSection}>\n        <Text style={styles.label}>Tags (optional):</Text>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={styles.tagsContainer}>\n            {availableTags.map(tag => (\n              <TouchableOpacity\n                key={tag}\n                style={[\n                  styles.tagBadge,\n                  selectedTags.includes(tag) ? { backgroundColor: getTagColor(tag) } : styles.unselectedTag\n                ]}\n                onPress={() => handleTagToggle(tag)}\n              >\n                <Text \n                  style={[\n                    styles.tagText, \n                    selectedTags.includes(tag) ? styles.selectedTagText : styles.unselectedTagText\n                  ]}\n                >\n                  {tag}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </ScrollView>\n      </View>\n      \n      <TouchableOpacity style={styles.addButton} onPress={handleAddTask}>\n        <Text style={styles.addButtonText}>Add to Schedule</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n// Helper function to get color based on tag\nconst getTagColor = (tag) => {\n  switch (tag.toLowerCase()) {\n    case 'work': return COLORS.primary;\n    case 'leisure': return COLORS.success;\n    case 'grind': return COLORS.secondaryDark;\n    case 'personal': return '#9C27B0'; // Purple\n    case 'meeting': return '#FF9800'; // Orange\n    case 'health': return '#E91E63'; // Pink\n    case 'learning': return '#00BCD4'; // Cyan\n    default: return COLORS.secondary;\n  }\n};\n\n// Helper function to get color based on productivity level\nconst getProductivityColor = (level) => {\n  switch (level) {\n    case 'high': return COLORS.success;\n    case 'medium': return COLORS.warning;\n    case 'low': return COLORS.danger;\n    default: return COLORS.secondaryDark;\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLORS.cardBackground,\n    borderRadius: 12,\n    padding: 16,\n    marginVertical: 10,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    borderLeftWidth: 4,\n    borderLeftColor: COLORS.primary,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: COLORS.black,\n  },\n  inputRow: {\n    marginBottom: 12,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n    marginBottom: 5,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    padding: 10,\n    fontSize: 16,\n    backgroundColor: COLORS.white,\n    color: COLORS.black,\n  },\n  // Time Input Container\n  timeInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    backgroundColor: COLORS.white,\n    overflow: 'hidden',\n  },\n  timeDisplay: {\n    flex: 1,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    justifyContent: 'center',\n  },\n  timeDisplayText: {\n    fontSize: 16,\n    color: COLORS.black,\n  },\n  placeholderText: {\n    color: COLORS.secondaryDark,\n  },\n  formatToggleButton: {\n    backgroundColor: COLORS.secondaryLight,\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    borderLeftWidth: 1,\n    borderLeftColor: COLORS.secondary,\n  },\n  formatToggleText: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n  },\n  \n  // Modal Styles\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    width: '90%',\n    maxWidth: 400,\n    backgroundColor: COLORS.white,\n    borderRadius: 10,\n    padding: 20,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: COLORS.primary,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  \n  // Time Input Mode Tabs\n  timeInputTabs: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.secondaryLight,\n    marginBottom: 15,\n  },\n  timeInputTab: {\n    flex: 1,\n    paddingVertical: 10,\n    alignItems: 'center',\n  },\n  activeTimeInputTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS.primary,\n  },\n  timeInputTabText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n  },\n  \n  // Time Picker Mode\n  timePickerMode: {\n    marginBottom: 20,\n  },\n  \n  // Web Time Picker Styles\n  webTimePicker: {\n    width: '100%',\n  },\n  timeSliderContainer: {\n    marginBottom: 15,\n  },\n  timeSliderLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n    marginBottom: 5,\n  },\n  timeSliderRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  timeSliderValue: {\n    width: 35,\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: COLORS.primary,\n  },\n  \n  // Time Presets\n  timePresets: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  timePresetsLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n    marginBottom: 8,\n  },\n  timePresetsRow: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  timePreset: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 20,\n    marginRight: 8,\n    marginBottom: 8,\n    backgroundColor: COLORS.secondaryLight,\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n  },\n  activeTimePreset: {\n    backgroundColor: COLORS.primary,\n    borderColor: COLORS.primary,\n  },\n  timePresetText: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n  },\n  \n  // Manual Time Input\n  manualTimeInput: {\n    width: '100%',\n    marginBottom: 20,\n  },\n  manualTimeInputField: {\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    padding: 10,\n    fontSize: 16,\n    backgroundColor: COLORS.white,\n    marginBottom: 5,\n  },\n  inputError: {\n    borderColor: COLORS.danger,\n  },\n  timeInputErrorText: {\n    color: COLORS.danger,\n    fontSize: 12,\n    marginBottom: 5,\n  },\n  timeInputHint: {\n    color: COLORS.secondaryDark,\n    fontSize: 12,\n    marginBottom: 10,\n  },\n  applyTimeButton: {\n    backgroundColor: COLORS.primary,\n    paddingVertical: 8,\n    borderRadius: 6,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  applyTimeButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n  \n  // Modal Footer\n  modalFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginTop: 5,\n  },\n  modalButton: {\n    flex: 1,\n    paddingVertical: 10,\n    alignItems: 'center',\n    borderRadius: 6,\n    marginHorizontal: 5,\n  },\n  cancelButton: {\n    backgroundColor: COLORS.secondaryLight,\n  },\n  cancelButtonText: {\n    color: COLORS.secondaryDark,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  confirmButton: {\n    backgroundColor: COLORS.primary,\n  },\n  confirmButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  \n  // Original styles\n  timePickerContainer: {\n    flex: 1,\n    borderWidth: Platform.OS !== 'web' ? 1 : 0,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    backgroundColor: COLORS.white,\n    overflow: 'hidden',\n  },\n  timePicker: {\n    width: '100%',\n    height: 50,\n  },\n  tagsSection: {\n    marginVertical: 12,\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 5,\n  },\n  tagBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 20,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  unselectedTag: {\n    backgroundColor: COLORS.secondaryLight,\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n  },\n  tagText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  selectedTagText: {\n    color: COLORS.white,\n  },\n  unselectedTagText: {\n    color: COLORS.secondaryDark,\n  },\n  productivityContainer: {\n    marginVertical: 12,\n  },\n  levelButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  levelButton: {\n    flex: 1,\n    paddingVertical: 8,\n    borderRadius: 6,\n    marginHorizontal: 4,\n    alignItems: 'center',\n  },\n  selectedLevel: {\n    borderWidth: 2,\n    borderColor: COLORS.secondaryDark,\n  },\n  levelText: {\n    color: COLORS.white,\n    fontWeight: '600',\n  },\n  addButton: {\n    backgroundColor: COLORS.primary,\n    paddingVertical: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  addButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  timeOptionsContainer: {\n    width: '100%',\n    maxHeight: 300,\n  },\n  timeOption: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.lightGray,\n  },\n  selectedTimeOption: {\n    backgroundColor: COLORS.lightPrimary,\n  },\n  timeOptionText: {\n    fontSize: 16,\n  },\n  selectedTimeOptionText: {\n    fontWeight: 'bold',\n    color: COLORS.primary,\n  },\n  closeButton: {\n    marginTop: 15,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: COLORS.primary,\n    borderRadius: 5,\n  },\n  closeButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n  },\n});\n\nexport default TaskInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}