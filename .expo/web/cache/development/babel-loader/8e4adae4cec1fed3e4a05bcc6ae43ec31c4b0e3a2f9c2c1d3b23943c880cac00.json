{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nvar Schedule = function Schedule(_ref) {\n  var tasks = _ref.tasks,\n    category = _ref.category;\n  var filteredTasks = tasks.filter(function (task) {\n    return task.category === category;\n  });\n  var groupedByHour = filteredTasks.reduce(function (acc, task) {\n    var hour = new Date(task.startTime).getHours();\n    if (!acc[hour]) acc[hour] = [];\n    acc[hour].push(task);\n    return acc;\n  }, {});\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.title,\n      children: [\"Your \", category.charAt(0).toUpperCase() + category.slice(1), \" Schedule\"]\n    }), _jsxs(ScrollView, {\n      style: styles.timeline,\n      children: [Object.keys(groupedByHour).sort().map(function (hour) {\n        return _jsxs(View, {\n          style: styles.timeBlock,\n          children: [_jsxs(Text, {\n            style: styles.timeLabel,\n            children: [hour, \":00\"]\n          }), _jsx(View, {\n            style: styles.taskContainer,\n            children: groupedByHour[hour].map(function (task, index) {\n              return _jsxs(View, {\n                style: styles.task,\n                children: [_jsx(Text, {\n                  style: styles.taskTitle,\n                  children: task.title\n                }), _jsxs(Text, {\n                  style: styles.taskDuration,\n                  children: [task.duration, \" min\"]\n                }), task.image && _jsx(Image, {\n                  source: {\n                    uri: task.image\n                  },\n                  style: styles.taskImage\n                }), task.productivityLevel && _jsx(View, {\n                  style: [styles.productivityIndicator, {\n                    backgroundColor: getProductivityColor(task.productivityLevel)\n                  }],\n                  children: _jsx(Text, {\n                    style: styles.productivityText,\n                    children: task.productivityLevel\n                  })\n                })]\n              }, index);\n            })\n          })]\n        }, hour);\n      }), filteredTasks.length === 0 && _jsxs(Text, {\n        style: styles.emptyState,\n        children: [\"No tasks scheduled for \", category, \" category. Add some tasks to get personalized suggestions!\"]\n      })]\n    })]\n  });\n};\nvar getProductivityColor = function getProductivityColor(level) {\n  switch (level) {\n    case 'high':\n      return '#4CAF50';\n    case 'medium':\n      return '#FFC107';\n    case 'low':\n      return '#F44336';\n    default:\n      return '#9E9E9E';\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: '#333'\n  },\n  timeline: {\n    flex: 1\n  },\n  timeBlock: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  timeLabel: {\n    width: 50,\n    fontSize: 16,\n    color: '#666',\n    paddingTop: 5\n  },\n  taskContainer: {\n    flex: 1\n  },\n  task: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    elevation: 2\n  },\n  taskTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 5\n  },\n  taskDuration: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 5\n  },\n  taskImage: {\n    width: '100%',\n    height: 120,\n    borderRadius: 6,\n    marginVertical: 5\n  },\n  productivityIndicator: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    marginTop: 5\n  },\n  productivityText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  emptyState: {\n    fontSize: 16,\n    color: '#666',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 40\n  }\n});\nexport default Schedule;","map":{"version":3,"names":["React","View","Text","StyleSheet","Image","ScrollView","jsxs","_jsxs","jsx","_jsx","Schedule","_ref","tasks","category","filteredTasks","filter","task","groupedByHour","reduce","acc","hour","Date","startTime","getHours","push","style","styles","container","children","title","charAt","toUpperCase","slice","timeline","Object","keys","sort","map","timeBlock","timeLabel","taskContainer","index","taskTitle","taskDuration","duration","image","source","uri","taskImage","productivityLevel","productivityIndicator","backgroundColor","getProductivityColor","productivityText","length","emptyState","level","create","flex","marginBottom","fontSize","fontWeight","color","flexDirection","width","paddingTop","borderRadius","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginVertical","alignSelf","paddingHorizontal","paddingVertical","marginTop","fontStyle","textAlign"],"sources":["C:/Users/Seho/Desktop/Seho/Personal Projects/Claude/scheduler_app/src/components/Schedule.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Image, ScrollView } from 'react-native';\n\nconst Schedule = ({ tasks, category }) => {\n  // Filter tasks by selected category\n  const filteredTasks = tasks.filter(task => task.category === category);\n  \n  // Group tasks by hour for timeline view\n  const groupedByHour = filteredTasks.reduce((acc, task) => {\n    const hour = new Date(task.startTime).getHours();\n    if (!acc[hour]) acc[hour] = [];\n    acc[hour].push(task);\n    return acc;\n  }, {});\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Your {category.charAt(0).toUpperCase() + category.slice(1)} Schedule</Text>\n      \n      <ScrollView style={styles.timeline}>\n        {Object.keys(groupedByHour).sort().map(hour => (\n          <View key={hour} style={styles.timeBlock}>\n            <Text style={styles.timeLabel}>{hour}:00</Text>\n            <View style={styles.taskContainer}>\n              {groupedByHour[hour].map((task, index) => (\n                <View key={index} style={styles.task}>\n                  <Text style={styles.taskTitle}>{task.title}</Text>\n                  <Text style={styles.taskDuration}>{task.duration} min</Text>\n                  {task.image && (\n                    <Image \n                      source={{ uri: task.image }} \n                      style={styles.taskImage} \n                    />\n                  )}\n                  {task.productivityLevel && (\n                    <View style={[styles.productivityIndicator, \n                      { backgroundColor: getProductivityColor(task.productivityLevel) }]}>\n                      <Text style={styles.productivityText}>\n                        {task.productivityLevel}\n                      </Text>\n                    </View>\n                  )}\n                </View>\n              ))}\n            </View>\n          </View>\n        ))}\n        \n        {/* Empty state */}\n        {filteredTasks.length === 0 && (\n          <Text style={styles.emptyState}>\n            No tasks scheduled for {category} category. Add some tasks to get personalized suggestions!\n          </Text>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\n// Helper function to get color based on productivity level\nconst getProductivityColor = (level) => {\n  switch (level) {\n    case 'high': return '#4CAF50';\n    case 'medium': return '#FFC107';\n    case 'low': return '#F44336';\n    default: return '#9E9E9E';\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: '#333',\n  },\n  timeline: {\n    flex: 1,\n  },\n  timeBlock: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  timeLabel: {\n    width: 50,\n    fontSize: 16,\n    color: '#666',\n    paddingTop: 5,\n  },\n  taskContainer: {\n    flex: 1,\n  },\n  task: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    elevation: 2,\n  },\n  taskTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 5,\n  },\n  taskDuration: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 5,\n  },\n  taskImage: {\n    width: '100%',\n    height: 120,\n    borderRadius: 6,\n    marginVertical: 5,\n  },\n  productivityIndicator: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    marginTop: 5,\n  },\n  productivityText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  emptyState: {\n    fontSize: 16,\n    color: '#666',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 40,\n  },\n});\n\nexport default Schedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}