{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport COLORS from \"../colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskInput = function TaskInput(_ref) {\n  var onAddTask = _ref.onAddTask;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    duration = _useState4[0],\n    setDuration = _useState4[1];\n  var _useState5 = useState('09:00'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    startTime = _useState6[0],\n    setStartTime = _useState6[1];\n  var _useState7 = useState('medium'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    productivityLevel = _useState8[0],\n    setProductivityLevel = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedTags = _useState10[0],\n    setSelectedTags = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showTimePicker = _useState12[0],\n    setShowTimePicker = _useState12[1];\n  var _useState13 = useState('picker'),\n    _useState14 = _slicedToArray(_useState13, 2),\n    timeInputMode = _useState14[0],\n    setTimeInputMode = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    timeInputText = _useState16[0],\n    setTimeInputText = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    timeInputError = _useState18[0],\n    setTimeInputError = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showTimeModal = _useState20[0],\n    setShowTimeModal = _useState20[1];\n  var _useState21 = useState('09:00'),\n    _useState22 = _slicedToArray(_useState21, 2),\n    tempTime = _useState22[0],\n    setTempTime = _useState22[1];\n  var _useState23 = useState('12h'),\n    _useState24 = _slicedToArray(_useState23, 2),\n    timeFormat = _useState24[0],\n    setTimeFormat = _useState24[1];\n  var availableTags = ['work', 'leisure', 'grind', 'personal', 'meeting', 'health', 'learning'];\n  function getDisplayTime(timeString) {\n    var _timeString$split$map = timeString.split(':').map(Number),\n      _timeString$split$map2 = _slicedToArray(_timeString$split$map, 2),\n      hours = _timeString$split$map2[0],\n      minutes = _timeString$split$map2[1];\n    var period = hours >= 12 ? 'PM' : 'AM';\n    var displayHour = hours % 12 === 0 ? 12 : hours % 12;\n    return displayHour + \":\" + minutes.toString().padStart(2, '0') + \" \" + period;\n  }\n  function get24HourDisplayTime(timeString) {\n    var _timeString$split$map3 = timeString.split(':').map(Number),\n      _timeString$split$map4 = _slicedToArray(_timeString$split$map3, 2),\n      hours = _timeString$split$map4[0],\n      minutes = _timeString$split$map4[1];\n    return hours.toString().padStart(2, '0') + \":\" + minutes.toString().padStart(2, '0');\n  }\n  function getCurrentDisplayTime() {\n    return timeFormat === '12h' ? getDisplayTime(startTime) : get24HourDisplayTime(startTime);\n  }\n  var generateTimeOptions = function generateTimeOptions() {\n    var options = [];\n    for (var hour = 0; hour < 24; hour++) {\n      for (var minute = 0; minute < 60; minute += 15) {\n        var timeValue = hour.toString().padStart(2, '0') + \":\" + minute.toString().padStart(2, '0');\n        var period = hour >= 12 ? 'PM' : 'AM';\n        var displayHour = hour % 12 === 0 ? 12 : hour % 12;\n        var displayTime = displayHour + \":\" + minute.toString().padStart(2, '0') + \" \" + period;\n        options.push({\n          value: timeValue,\n          label: displayTime\n        });\n      }\n    }\n    return options;\n  };\n  var timeOptions = generateTimeOptions();\n  var handleTagToggle = function handleTagToggle(tag) {\n    if (selectedTags.includes(tag)) {\n      setSelectedTags(selectedTags.filter(function (t) {\n        return t !== tag;\n      }));\n    } else {\n      setSelectedTags([].concat(_toConsumableArray(selectedTags), [tag]));\n    }\n  };\n  var timeToNumbers = function timeToNumbers(timeString) {\n    var _timeString$split$map5 = timeString.split(':').map(Number),\n      _timeString$split$map6 = _slicedToArray(_timeString$split$map5, 2),\n      hours = _timeString$split$map6[0],\n      minutes = _timeString$split$map6[1];\n    return {\n      hours: hours,\n      minutes: minutes\n    };\n  };\n  var numbersToTime = function numbersToTime(hours, minutes) {\n    return hours.toString().padStart(2, '0') + \":\" + minutes.toString().padStart(2, '0');\n  };\n  var handleTimeChange = function handleTimeChange(event, selectedTime) {\n    setShowTimePicker(false);\n    if (selectedTime) {\n      var hours = selectedTime.getHours();\n      var minutes = selectedTime.getMinutes();\n      setStartTime(numbersToTime(hours, minutes));\n    }\n  };\n  var showTimePickerModal = function showTimePickerModal() {\n    setShowTimePicker(true);\n  };\n  var validateTimeInput = function validateTimeInput(input) {\n    var twelveHourRegex = /^(0?[1-9]|1[0-2]):([0-5][0-9])\\s*(am|pm|AM|PM)$/;\n    var twentyFourHourRegex = /^([01]?[0-9]|2[0-3]):([0-5][0-9])$/;\n    if (twelveHourRegex.test(input)) {\n      var _input$match = input.match(twelveHourRegex),\n        _input$match2 = _slicedToArray(_input$match, 4),\n        hours = _input$match2[1],\n        minutes = _input$match2[2],\n        period = _input$match2[3];\n      var numericHours = parseInt(hours, 10);\n      if (period.toLowerCase() === 'pm' && numericHours < 12) {\n        numericHours += 12;\n      } else if (period.toLowerCase() === 'am' && numericHours === 12) {\n        numericHours = 0;\n      }\n      return {\n        valid: true,\n        time: numbersToTime(numericHours, parseInt(minutes, 10))\n      };\n    } else if (twentyFourHourRegex.test(input)) {\n      var _input$match3 = input.match(twentyFourHourRegex),\n        _input$match4 = _slicedToArray(_input$match3, 3),\n        _hours = _input$match4[1],\n        _minutes = _input$match4[2];\n      return {\n        valid: true,\n        time: numbersToTime(parseInt(_hours, 10), parseInt(_minutes, 10))\n      };\n    }\n    return {\n      valid: false,\n      error: 'Invalid time format. Please use HH:MM AM/PM or 24-hour format.'\n    };\n  };\n  var handleTimeInputChange = function handleTimeInputChange(text) {\n    setTimeInputText(text);\n    setTimeInputError('');\n  };\n  var applyManualTimeInput = function applyManualTimeInput() {\n    var result = validateTimeInput(timeInputText);\n    if (result.valid) {\n      setStartTime(result.time);\n      setTimeInputMode('picker');\n      setTimeInputText('');\n      setTimeInputError('');\n    } else {\n      setTimeInputError(result.error);\n    }\n  };\n  var toggleTimeFormat = function toggleTimeFormat() {\n    setTimeFormat(timeFormat === '12h' ? '24h' : '12h');\n  };\n  var openTimeModal = function openTimeModal() {\n    setTempTime(startTime);\n    setShowTimeModal(true);\n  };\n  var confirmTime = function confirmTime() {\n    setStartTime(tempTime);\n    setShowTimeModal(false);\n  };\n  var updateTimeFromSliders = function updateTimeFromSliders(hours, minutes) {\n    setTempTime(numbersToTime(hours, minutes));\n  };\n  var handleAddTask = function handleAddTask() {\n    if (!title || !duration) {\n      alert('Please fill out all required fields');\n      return;\n    }\n    var newTask = {\n      id: Date.now().toString(),\n      title: title,\n      duration: parseInt(duration, 10),\n      startTime: new Date(\"2023-01-01T\" + startTime).toISOString(),\n      tags: selectedTags,\n      productivityLevel: productivityLevel,\n      completed: false\n    };\n    onAddTask(newTask);\n    setTitle('');\n    setDuration('');\n    setStartTime('09:00');\n    setSelectedTags([]);\n    setProductivityLevel('medium');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Add New Task\"\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Task Title:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: title,\n        onChangeText: setTitle,\n        placeholder: \"What are you planning to do?\",\n        placeholderTextColor: COLORS.secondaryDark\n      })]\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Duration (min):\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: duration,\n        onChangeText: setDuration,\n        placeholder: \"How long will it take?\",\n        placeholderTextColor: COLORS.secondaryDark,\n        keyboardType: \"numeric\"\n      })]\n    }), _jsxs(View, {\n      style: styles.inputRow,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Start Time:\"\n      }), _jsx(View, {\n        style: styles.timePickerContainer,\n        children: Platform.OS === 'web' ? _jsx(\"select\", {\n          value: startTime,\n          onChange: function onChange(e) {\n            return setStartTime(e.target.value);\n          },\n          style: {\n            width: '100%',\n            padding: 8,\n            borderRadius: 4,\n            border: \"1px solid \" + COLORS.secondary,\n            backgroundColor: COLORS.white,\n            fontSize: 16\n          },\n          children: timeOptions.map(function (option) {\n            return _jsx(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value);\n          })\n        }) : _jsx(Picker, {\n          selectedValue: startTime,\n          style: styles.timePicker,\n          onValueChange: function onValueChange(itemValue) {\n            return setStartTime(itemValue);\n          },\n          children: timeOptions.map(function (option) {\n            return _jsx(Picker.Item, {\n              label: option.label,\n              value: option.value\n            }, option.value);\n          })\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.tagsSection,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Tags (optional):\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        children: _jsx(View, {\n          style: styles.tagsContainer,\n          children: availableTags.map(function (tag) {\n            return _jsx(TouchableOpacity, {\n              style: [styles.tagBadge, selectedTags.includes(tag) ? {\n                backgroundColor: getTagColor(tag)\n              } : styles.unselectedTag],\n              onPress: function onPress() {\n                return handleTagToggle(tag);\n              },\n              children: _jsx(Text, {\n                style: [styles.tagText, selectedTags.includes(tag) ? styles.selectedTagText : styles.unselectedTagText],\n                children: tag\n              })\n            }, tag);\n          })\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: handleAddTask,\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \"Add to Schedule\"\n      })\n    })]\n  });\n};\nvar getTagColor = function getTagColor(tag) {\n  switch (tag.toLowerCase()) {\n    case 'work':\n      return COLORS.primary;\n    case 'leisure':\n      return COLORS.success;\n    case 'grind':\n      return COLORS.secondaryDark;\n    case 'personal':\n      return '#9C27B0';\n    case 'meeting':\n      return '#FF9800';\n    case 'health':\n      return '#E91E63';\n    case 'learning':\n      return '#00BCD4';\n    default:\n      return COLORS.secondary;\n  }\n};\nvar getProductivityColor = function getProductivityColor(level) {\n  switch (level) {\n    case 'high':\n      return COLORS.success;\n    case 'medium':\n      return COLORS.warning;\n    case 'low':\n      return COLORS.danger;\n    default:\n      return COLORS.secondaryDark;\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLORS.cardBackground,\n    borderRadius: 12,\n    padding: 16,\n    marginVertical: 10,\n    shadowColor: COLORS.black,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    borderLeftWidth: 4,\n    borderLeftColor: COLORS.primary\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: COLORS.black\n  },\n  inputRow: {\n    marginBottom: 12\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n    marginBottom: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    padding: 10,\n    fontSize: 16,\n    backgroundColor: COLORS.white,\n    color: COLORS.black\n  },\n  timePickerContainer: {\n    flex: 1,\n    borderWidth: Platform.OS !== 'web' ? 1 : 0,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    backgroundColor: COLORS.white,\n    overflow: 'hidden'\n  },\n  timePicker: {\n    width: '100%',\n    height: 50\n  },\n  tagsSection: {\n    marginVertical: 12\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 5\n  },\n  tagBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 20,\n    marginRight: 8,\n    marginBottom: 8\n  },\n  unselectedTag: {\n    backgroundColor: COLORS.secondaryLight,\n    borderWidth: 1,\n    borderColor: COLORS.secondary\n  },\n  tagText: {\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  selectedTagText: {\n    color: COLORS.white\n  },\n  unselectedTagText: {\n    color: COLORS.secondaryDark\n  },\n  productivityContainer: {\n    marginVertical: 12\n  },\n  levelButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  levelButton: {\n    flex: 1,\n    paddingVertical: 8,\n    borderRadius: 6,\n    marginHorizontal: 4,\n    alignItems: 'center'\n  },\n  selectedLevel: {\n    borderWidth: 2,\n    borderColor: COLORS.secondaryDark\n  },\n  levelText: {\n    color: COLORS.white,\n    fontWeight: '600'\n  },\n  addButton: {\n    backgroundColor: COLORS.primary,\n    paddingVertical: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  addButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    width: '80%',\n    maxHeight: '80%',\n    backgroundColor: COLORS.white,\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center'\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: COLORS.primary\n  },\n  timeOptionsContainer: {\n    width: '100%',\n    maxHeight: 300\n  },\n  timeOption: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.lightGray\n  },\n  selectedTimeOption: {\n    backgroundColor: COLORS.lightPrimary\n  },\n  timeOptionText: {\n    fontSize: 16\n  },\n  selectedTimeOptionText: {\n    fontWeight: 'bold',\n    color: COLORS.primary\n  },\n  closeButton: {\n    marginTop: 15,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: COLORS.primary,\n    borderRadius: 5\n  },\n  closeButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold'\n  }\n});\nexport default TaskInput;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","StyleSheet","TouchableOpacity","ScrollView","Platform","Modal","Picker","DateTimePicker","COLORS","jsx","_jsx","jsxs","_jsxs","TaskInput","_ref","onAddTask","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","duration","setDuration","_useState5","_useState6","startTime","setStartTime","_useState7","_useState8","productivityLevel","setProductivityLevel","_useState9","_useState10","selectedTags","setSelectedTags","_useState11","_useState12","showTimePicker","setShowTimePicker","_useState13","_useState14","timeInputMode","setTimeInputMode","_useState15","_useState16","timeInputText","setTimeInputText","_useState17","_useState18","timeInputError","setTimeInputError","_useState19","_useState20","showTimeModal","setShowTimeModal","_useState21","_useState22","tempTime","setTempTime","_useState23","_useState24","timeFormat","setTimeFormat","availableTags","getDisplayTime","timeString","_timeString$split$map","split","map","Number","_timeString$split$map2","hours","minutes","period","displayHour","toString","padStart","get24HourDisplayTime","_timeString$split$map3","_timeString$split$map4","getCurrentDisplayTime","generateTimeOptions","options","hour","minute","timeValue","displayTime","push","value","label","timeOptions","handleTagToggle","tag","includes","filter","t","concat","_toConsumableArray","timeToNumbers","_timeString$split$map5","_timeString$split$map6","numbersToTime","handleTimeChange","event","selectedTime","getHours","getMinutes","showTimePickerModal","validateTimeInput","input","twelveHourRegex","twentyFourHourRegex","test","_input$match","match","_input$match2","numericHours","parseInt","toLowerCase","valid","time","_input$match3","_input$match4","error","handleTimeInputChange","text","applyManualTimeInput","result","toggleTimeFormat","openTimeModal","confirmTime","updateTimeFromSliders","handleAddTask","alert","newTask","id","Date","now","toISOString","tags","completed","style","styles","container","children","inputRow","onChangeText","placeholder","placeholderTextColor","secondaryDark","keyboardType","timePickerContainer","OS","onChange","e","target","width","padding","borderRadius","border","secondary","backgroundColor","white","fontSize","option","selectedValue","timePicker","onValueChange","itemValue","Item","tagsSection","horizontal","showsHorizontalScrollIndicator","tagsContainer","tagBadge","getTagColor","unselectedTag","onPress","tagText","selectedTagText","unselectedTagText","addButton","addButtonText","primary","success","getProductivityColor","level","warning","danger","create","cardBackground","marginVertical","shadowColor","black","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderLeftWidth","borderLeftColor","fontWeight","marginBottom","color","borderWidth","borderColor","flex","overflow","flexDirection","flexWrap","marginTop","paddingHorizontal","paddingVertical","marginRight","secondaryLight","productivityContainer","levelButtons","justifyContent","levelButton","marginHorizontal","alignItems","selectedLevel","levelText","modalOverlay","modalContent","maxHeight","modalTitle","timeOptionsContainer","timeOption","borderBottomWidth","borderBottomColor","lightGray","selectedTimeOption","lightPrimary","timeOptionText","selectedTimeOptionText","closeButton","closeButtonText"],"sources":["C:/Users/Seho/Desktop/Seho/Personal Projects/Claude/scheduler_app/src/components/TaskInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ScrollView, Platform, Modal } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport COLORS from '../colors';\n\nconst TaskInput = ({ onAddTask }) => {\n  const [title, setTitle] = useState('');\n  const [duration, setDuration] = useState('');\n  const [startTime, setStartTime] = useState('09:00');\n  const [productivityLevel, setProductivityLevel] = useState('medium');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [showTimePicker, setShowTimePicker] = useState(false);\n  const [timeInputMode, setTimeInputMode] = useState('picker'); // 'picker' or 'text'\n  const [timeInputText, setTimeInputText] = useState('');\n  const [timeInputError, setTimeInputError] = useState('');\n  const [showTimeModal, setShowTimeModal] = useState(false);\n  const [tempTime, setTempTime] = useState('09:00');\n  const [timeFormat, setTimeFormat] = useState('12h'); // '12h' or '24h'\n\n  const availableTags = ['work', 'leisure', 'grind', 'personal', 'meeting', 'health', 'learning'];\n  \n  // Format time for display (12-hour format with AM/PM)\n  function getDisplayTime(timeString) {\n    const [hours, minutes] = timeString.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const displayHour = hours % 12 === 0 ? 12 : hours % 12;\n    return `${displayHour}:${minutes.toString().padStart(2, '0')} ${period}`;\n  }\n\n  // Format time for 24-hour display\n  function get24HourDisplayTime(timeString) {\n    const [hours, minutes] = timeString.split(':').map(Number);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  }\n\n  // Get current display time based on format\n  function getCurrentDisplayTime() {\n    return timeFormat === '12h' ? getDisplayTime(startTime) : get24HourDisplayTime(startTime);\n  }\n\n  // Generate time options in 15-minute intervals\n  const generateTimeOptions = () => {\n    const options = [];\n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60; minute += 15) {\n        const timeValue = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const period = hour >= 12 ? 'PM' : 'AM';\n        const displayHour = hour % 12 === 0 ? 12 : hour % 12;\n        const displayTime = `${displayHour}:${minute.toString().padStart(2, '0')} ${period}`;\n        \n        options.push({\n          value: timeValue,\n          label: displayTime\n        });\n      }\n    }\n    return options;\n  };\n\n  const timeOptions = generateTimeOptions();\n\n  const handleTagToggle = (tag) => {\n    if (selectedTags.includes(tag)) {\n      setSelectedTags(selectedTags.filter(t => t !== tag));\n    } else {\n      setSelectedTags([...selectedTags, tag]);\n    }\n  };\n\n  // Convert time string to hours and minutes\n  const timeToNumbers = (timeString) => {\n    const [hours, minutes] = timeString.split(':').map(Number);\n    return { hours, minutes };\n  };\n\n  // Convert hours and minutes to time string\n  const numbersToTime = (hours, minutes) => {\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  };\n\n  const handleTimeChange = (event, selectedTime) => {\n    setShowTimePicker(false);\n    if (selectedTime) {\n      const hours = selectedTime.getHours();\n      const minutes = selectedTime.getMinutes();\n      setStartTime(numbersToTime(hours, minutes));\n    }\n  };\n\n  const showTimePickerModal = () => {\n    setShowTimePicker(true);\n  };\n\n  // Function to validate manually entered time\n  const validateTimeInput = (input) => {\n    // For 12-hour format with AM/PM\n    const twelveHourRegex = /^(0?[1-9]|1[0-2]):([0-5][0-9])\\s*(am|pm|AM|PM)$/;\n    // For 24-hour format\n    const twentyFourHourRegex = /^([01]?[0-9]|2[0-3]):([0-5][0-9])$/;\n    \n    if (twelveHourRegex.test(input)) {\n      // Extract hours, minutes, and period from the input\n      const [, hours, minutes, period] = input.match(twelveHourRegex);\n      let numericHours = parseInt(hours, 10);\n      \n      // Convert to 24-hour format\n      if (period.toLowerCase() === 'pm' && numericHours < 12) {\n        numericHours += 12;\n      } else if (period.toLowerCase() === 'am' && numericHours === 12) {\n        numericHours = 0;\n      }\n      \n      return {\n        valid: true,\n        time: numbersToTime(numericHours, parseInt(minutes, 10))\n      };\n    } else if (twentyFourHourRegex.test(input)) {\n      // Extract hours and minutes from the input\n      const [, hours, minutes] = input.match(twentyFourHourRegex);\n      return {\n        valid: true,\n        time: numbersToTime(parseInt(hours, 10), parseInt(minutes, 10))\n      };\n    }\n    \n    return {\n      valid: false,\n      error: 'Invalid time format. Please use HH:MM AM/PM or 24-hour format.'\n    };\n  };\n\n  // Handle input in text mode\n  const handleTimeInputChange = (text) => {\n    setTimeInputText(text);\n    setTimeInputError('');\n  };\n\n  // Apply text input time\n  const applyManualTimeInput = () => {\n    const result = validateTimeInput(timeInputText);\n    if (result.valid) {\n      setStartTime(result.time);\n      setTimeInputMode('picker');\n      setTimeInputText('');\n      setTimeInputError('');\n    } else {\n      setTimeInputError(result.error);\n    }\n  };\n\n  // Toggle time format\n  const toggleTimeFormat = () => {\n    setTimeFormat(timeFormat === '12h' ? '24h' : '12h');\n  };\n\n  // Open custom time modal\n  const openTimeModal = () => {\n    setTempTime(startTime);\n    setShowTimeModal(true);\n  };\n\n  // Handle time confirmation in modal\n  const confirmTime = () => {\n    setStartTime(tempTime);\n    setShowTimeModal(false);\n  };\n\n  // Update time from time slider inputs\n  const updateTimeFromSliders = (hours, minutes) => {\n    setTempTime(numbersToTime(hours, minutes));\n  };\n\n  const handleAddTask = () => {\n    if (!title || !duration) {\n      // Simple validation\n      alert('Please fill out all required fields');\n      return;\n    }\n\n    const newTask = {\n      id: Date.now().toString(),\n      title,\n      duration: parseInt(duration, 10),\n      startTime: new Date(`2023-01-01T${startTime}`).toISOString(),\n      tags: selectedTags,\n      productivityLevel,\n      completed: false,\n    };\n\n    onAddTask(newTask);\n    \n    // Reset form\n    setTitle('');\n    setDuration('');\n    setStartTime('09:00');\n    setSelectedTags([]);\n    setProductivityLevel('medium');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add New Task</Text>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Task Title:</Text>\n        <TextInput\n          style={styles.input}\n          value={title}\n          onChangeText={setTitle}\n          placeholder=\"What are you planning to do?\"\n          placeholderTextColor={COLORS.secondaryDark}\n        />\n      </View>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Duration (min):</Text>\n        <TextInput\n          style={styles.input}\n          value={duration}\n          onChangeText={setDuration}\n          placeholder=\"How long will it take?\"\n          placeholderTextColor={COLORS.secondaryDark}\n          keyboardType=\"numeric\"\n        />\n      </View>\n      \n      <View style={styles.inputRow}>\n        <Text style={styles.label}>Start Time:</Text>\n        <View style={styles.timePickerContainer}>\n          {Platform.OS === 'web' ? (\n            <select\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n              style={{\n                width: '100%',\n                padding: 8,\n                borderRadius: 4,\n                border: `1px solid ${COLORS.secondary}`,\n                backgroundColor: COLORS.white,\n                fontSize: 16,\n              }}\n            >\n              {timeOptions.map(option => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </select>\n          ) : (\n            <Picker\n              selectedValue={startTime}\n              style={styles.timePicker}\n              onValueChange={(itemValue) => setStartTime(itemValue)}\n            >\n              {timeOptions.map(option => (\n                <Picker.Item \n                  key={option.value} \n                  label={option.label} \n                  value={option.value} \n                />\n              ))}\n            </Picker>\n          )}\n        </View>\n      </View>\n      \n      <View style={styles.tagsSection}>\n        <Text style={styles.label}>Tags (optional):</Text>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={styles.tagsContainer}>\n            {availableTags.map(tag => (\n              <TouchableOpacity\n                key={tag}\n                style={[\n                  styles.tagBadge,\n                  selectedTags.includes(tag) ? { backgroundColor: getTagColor(tag) } : styles.unselectedTag\n                ]}\n                onPress={() => handleTagToggle(tag)}\n              >\n                <Text \n                  style={[\n                    styles.tagText, \n                    selectedTags.includes(tag) ? styles.selectedTagText : styles.unselectedTagText\n                  ]}\n                >\n                  {tag}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </ScrollView>\n      </View>\n      \n      \n      <TouchableOpacity style={styles.addButton} onPress={handleAddTask}>\n        <Text style={styles.addButtonText}>Add to Schedule</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n// Helper function to get color based on tag\nconst getTagColor = (tag) => {\n  switch (tag.toLowerCase()) {\n    case 'work': return COLORS.primary;\n    case 'leisure': return COLORS.success;\n    case 'grind': return COLORS.secondaryDark;\n    case 'personal': return '#9C27B0'; // Purple\n    case 'meeting': return '#FF9800'; // Orange\n    case 'health': return '#E91E63'; // Pink\n    case 'learning': return '#00BCD4'; // Cyan\n    default: return COLORS.secondary;\n  }\n};\n\n// Helper function to get color based on productivity level\nconst getProductivityColor = (level) => {\n  switch (level) {\n    case 'high': return COLORS.success;\n    case 'medium': return COLORS.warning;\n    case 'low': return COLORS.danger;\n    default: return COLORS.secondaryDark;\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLORS.cardBackground,\n    borderRadius: 12,\n    padding: 16,\n    marginVertical: 10,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    borderLeftWidth: 4,\n    borderLeftColor: COLORS.primary,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: COLORS.black,\n  },\n  inputRow: {\n    marginBottom: 12,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: COLORS.secondaryDark,\n    marginBottom: 5,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    padding: 10,\n    fontSize: 16,\n    backgroundColor: COLORS.white,\n    color: COLORS.black,\n  },\n  timePickerContainer: {\n    flex: 1,\n    borderWidth: Platform.OS !== 'web' ? 1 : 0,\n    borderColor: COLORS.secondary,\n    borderRadius: 6,\n    backgroundColor: COLORS.white,\n    overflow: 'hidden',\n  },\n  timePicker: {\n    width: '100%',\n    height: 50,\n  },\n  tagsSection: {\n    marginVertical: 12,\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 5,\n  },\n  tagBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 20,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  unselectedTag: {\n    backgroundColor: COLORS.secondaryLight,\n    borderWidth: 1,\n    borderColor: COLORS.secondary,\n  },\n  tagText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  selectedTagText: {\n    color: COLORS.white,\n  },\n  unselectedTagText: {\n    color: COLORS.secondaryDark,\n  },\n  productivityContainer: {\n    marginVertical: 12,\n  },\n  levelButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  levelButton: {\n    flex: 1,\n    paddingVertical: 8,\n    borderRadius: 6,\n    marginHorizontal: 4,\n    alignItems: 'center',\n  },\n  selectedLevel: {\n    borderWidth: 2,\n    borderColor: COLORS.secondaryDark,\n  },\n  levelText: {\n    color: COLORS.white,\n    fontWeight: '600',\n  },\n  addButton: {\n    backgroundColor: COLORS.primary,\n    paddingVertical: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  addButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    width: '80%',\n    maxHeight: '80%',\n    backgroundColor: COLORS.white,\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: COLORS.primary,\n  },\n  timeOptionsContainer: {\n    width: '100%',\n    maxHeight: 300,\n  },\n  timeOption: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.lightGray,\n  },\n  selectedTimeOption: {\n    backgroundColor: COLORS.lightPrimary,\n  },\n  timeOptionText: {\n    fontSize: 16,\n  },\n  selectedTimeOptionText: {\n    fontWeight: 'bold',\n    color: COLORS.primary,\n  },\n  closeButton: {\n    marginTop: 15,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: COLORS.primary,\n    borderRadius: 5,\n  },\n  closeButtonText: {\n    color: COLORS.white,\n    fontWeight: 'bold',\n  },\n});\n\nexport default TaskInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}