{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect } from 'react';\nvar useToDo = function useToDo() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    toDoItems = _useState2[0],\n    setToDoItems = _useState2[1];\n  useEffect(function () {\n    try {\n      var savedItems = localStorage.getItem('toDoItems');\n      if (savedItems) {\n        setToDoItems(JSON.parse(savedItems));\n      }\n    } catch (error) {\n      console.error('Error loading to-do items from localStorage:', error);\n    }\n  }, []);\n  useEffect(function () {\n    try {\n      localStorage.setItem('toDoItems', JSON.stringify(toDoItems));\n    } catch (error) {\n      console.error('Error saving to-do items to localStorage:', error);\n    }\n  }, [toDoItems]);\n  var addToDoItem = function addToDoItem(title) {\n    if (!title.trim()) return;\n    var newItem = {\n      id: Date.now().toString(),\n      title: title.trim(),\n      completed: false,\n      createdAt: new Date().toISOString()\n    };\n    setToDoItems([].concat(_toConsumableArray(toDoItems), [newItem]));\n  };\n  var toggleToDoItem = function toggleToDoItem(id) {\n    setToDoItems(toDoItems.map(function (item) {\n      return item.id === id ? _objectSpread(_objectSpread({}, item), {}, {\n        completed: !item.completed\n      }) : item;\n    }));\n  };\n  var removeToDoItem = function removeToDoItem(id) {\n    setToDoItems(toDoItems.filter(function (item) {\n      return item.id !== id;\n    }));\n  };\n  var clearCompletedItems = function clearCompletedItems() {\n    setToDoItems(toDoItems.filter(function (item) {\n      return !item.completed;\n    }));\n  };\n  return {\n    toDoItems: toDoItems,\n    addToDoItem: addToDoItem,\n    toggleToDoItem: toggleToDoItem,\n    removeToDoItem: removeToDoItem,\n    clearCompletedItems: clearCompletedItems\n  };\n};\nexport default useToDo;","map":{"version":3,"names":["useState","useEffect","useToDo","_useState","_useState2","_slicedToArray","toDoItems","setToDoItems","savedItems","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToDoItem","title","trim","newItem","id","Date","now","toString","completed","createdAt","toISOString","concat","_toConsumableArray","toggleToDoItem","map","item","_objectSpread","removeToDoItem","filter","clearCompletedItems"],"sources":["C:/Users/Seho/Desktop/Seho/Personal Projects/Claude/scheduler_app/src/hooks/useToDo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * Custom hook to manage a to-do list\n * Stores to-do items in localStorage for persistence\n * \n * @returns {Object} Methods and state for managing to-do items\n */\nconst useToDo = () => {\n  // State to store to-do items\n  const [toDoItems, setToDoItems] = useState([]);\n  \n  // Load saved to-do items from localStorage on component mount\n  useEffect(() => {\n    try {\n      const savedItems = localStorage.getItem('toDoItems');\n      if (savedItems) {\n        setToDoItems(JSON.parse(savedItems));\n      }\n    } catch (error) {\n      console.error('Error loading to-do items from localStorage:', error);\n    }\n  }, []);\n  \n  // Save to-do items to localStorage whenever they change\n  useEffect(() => {\n    try {\n      localStorage.setItem('toDoItems', JSON.stringify(toDoItems));\n    } catch (error) {\n      console.error('Error saving to-do items to localStorage:', error);\n    }\n  }, [toDoItems]);\n  \n  /**\n   * Add a new to-do item\n   * @param {string} title - The title of the to-do item\n   */\n  const addToDoItem = (title) => {\n    if (!title.trim()) return; // Don't add empty items\n    \n    const newItem = {\n      id: Date.now().toString(), // Unique ID based on timestamp\n      title: title.trim(),\n      completed: false,\n      createdAt: new Date().toISOString()\n    };\n    \n    setToDoItems([...toDoItems, newItem]);\n  };\n  \n  /**\n   * Toggle the completed status of a to-do item\n   * @param {string} id - The ID of the to-do item to toggle\n   */\n  const toggleToDoItem = (id) => {\n    setToDoItems(\n      toDoItems.map(item => \n        item.id === id ? { ...item, completed: !item.completed } : item\n      )\n    );\n  };\n  \n  /**\n   * Remove a to-do item\n   * @param {string} id - The ID of the to-do item to remove\n   */\n  const removeToDoItem = (id) => {\n    setToDoItems(toDoItems.filter(item => item.id !== id));\n  };\n  \n  /**\n   * Clear all completed to-do items\n   */\n  const clearCompletedItems = () => {\n    setToDoItems(toDoItems.filter(item => !item.completed));\n  };\n  \n  return {\n    toDoItems,\n    addToDoItem,\n    toggleToDoItem,\n    removeToDoItem,\n    clearCompletedItems\n  };\n};\n\nexport default useToDo;"],"mappings":";;;;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAQ3C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAEpB,IAAAC,SAAA,GAAkCH,QAAQ,CAAC,EAAE,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAG9BH,SAAS,CAAC,YAAM;IACd,IAAI;MACF,IAAMO,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACpD,IAAIF,UAAU,EAAE;QACdD,YAAY,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MACtC;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACtE;EACF,CAAC,EAAE,EAAE,CAAC;EAGNZ,SAAS,CAAC,YAAM;IACd,IAAI;MACFQ,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAACK,SAAS,CAACV,SAAS,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE;EACF,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAMf,IAAMW,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;IAC7B,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;IAEnB,IAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBN,KAAK,EAAEA,KAAK,CAACC,IAAI,CAAC,CAAC;MACnBM,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC;IACpC,CAAC;IAEDpB,YAAY,IAAAqB,MAAA,CAAAC,kBAAA,CAAKvB,SAAS,IAAEc,OAAO,EAAC,CAAC;EACvC,CAAC;EAMD,IAAMU,cAAc,GAAG,SAAjBA,cAAcA,CAAIT,EAAE,EAAK;IAC7Bd,YAAY,CACVD,SAAS,CAACyB,GAAG,CAAC,UAAAC,IAAI;MAAA,OAChBA,IAAI,CAACX,EAAE,KAAKA,EAAE,GAAAY,aAAA,CAAAA,aAAA,KAAQD,IAAI;QAAEP,SAAS,EAAE,CAACO,IAAI,CAACP;MAAS,KAAKO,IAAI;IAAA,CACjE,CACF,CAAC;EACH,CAAC;EAMD,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAIb,EAAE,EAAK;IAC7Bd,YAAY,CAACD,SAAS,CAAC6B,MAAM,CAAC,UAAAH,IAAI;MAAA,OAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE;IAAA,EAAC,CAAC;EACxD,CAAC;EAKD,IAAMe,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChC7B,YAAY,CAACD,SAAS,CAAC6B,MAAM,CAAC,UAAAH,IAAI;MAAA,OAAI,CAACA,IAAI,CAACP,SAAS;IAAA,EAAC,CAAC;EACzD,CAAC;EAED,OAAO;IACLnB,SAAS,EAATA,SAAS;IACTW,WAAW,EAAXA,WAAW;IACXa,cAAc,EAAdA,cAAc;IACdI,cAAc,EAAdA,cAAc;IACdE,mBAAmB,EAAnBA;EACF,CAAC;AACH,CAAC;AAED,eAAelC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}